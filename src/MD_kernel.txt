/*
 * GANSU: GPU Acclerated Numerical Simulation Utility
 *
 * Copyright (c) 2025, Hiroshima University and Fujitsu Limited
 * All rights reserved.
 *
 * This software is licensed under the BSD 3-Clause License.
 * You may obtain a copy of the license in the LICENSE file
 * located in the root directory of this source tree or at:
 * https://opensource.org/licenses/BSD-3-Clause
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */


// MD_kernel
// ----- (s|s) kernel -----
__global__
void overlap_kinetic_MDss(real_t* g_overlap, real_t* g_kinetic, 
                        const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                        const size_t num_threads,
                        const int num_basis)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, true); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const int val = ((i == j) && (ab.y != ab.x)) ? 2 : 1;

	const double p = a.exponent + b.exponent;
	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 0, 0) * pow((M_PI/p), 1.5) * exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double s = 0;
	double k = 0;

	s = 1.00000000000000;
	k = b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 3.0*b.exponent*p + 3.0*(p*p))/(p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+0, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+0, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

}


// ----- (s|p) kernel -----
__global__
void overlap_kinetic_MDsp(real_t* g_overlap, real_t* g_kinetic, 
                        const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                        const size_t num_threads,
                        const int num_basis)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;
	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 0, 1) * pow((M_PI/p), 1.5) * exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double s = 0;
	double k = 0;

	s = (a.coordinate.x-b.coordinate.x)*a.exponent/p;
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 5.0*b.exponent*p + 5.0*(p*p))/(p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+0, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+0, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*a.exponent/p;
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 5.0*b.exponent*p + 5.0*(p*p))/(p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+1, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+1, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*a.exponent/p;
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 5.0*b.exponent*p + 5.0*(p*p))/(p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+2, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+2, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

}


// ----- (p|p) kernel -----
__global__
void overlap_kinetic_MDpp(real_t* g_overlap, real_t* g_kinetic, 
                        const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                        const size_t num_threads,
                        const int num_basis)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, true); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const int val = ((i == j) && (ab.y != ab.x)) ? 2 : 1;

	const double p = a.exponent + b.exponent;
	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 1, 1) * pow((M_PI/p), 1.5) * exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double s = 0;
	double k = 0;

	s = (-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*p)/(p*p);
	k = b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p + 5.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*p - 5.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p - 2.5*b.exponent*(p*p) + 2.5*(p*p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+0, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+0, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent/(p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 2.0*a.exponent*p + 5.0*b.exponent*p - 5.0*(p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+1, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+1, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent/(p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 2.0*a.exponent*p + 5.0*b.exponent*p - 5.0*(p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+2, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+2, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*p)/(p*p);
	k = b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p + 5.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*p - 5.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p - 2.5*b.exponent*(p*p) + 2.5*(p*p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+1, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+1, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent/(p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 2.0*a.exponent*p + 5.0*b.exponent*p - 5.0*(p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+2, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+2, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*p)/(p*p);
	k = b.exponent*(b.exponent*(-2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 3.0*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) + b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - 2.0*(p*p)))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+2, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+2, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	if(i==j) return;

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent/(p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 2.0*a.exponent*p + 5.0*b.exponent*p - 5.0*(p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+0, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+0, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent/(p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 2.0*a.exponent*p + 5.0*b.exponent*p - 5.0*(p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+0, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+0, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent/(p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 2.0*a.exponent*p + 5.0*b.exponent*p - 5.0*(p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+1, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+1, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

}


// ----- (s|d) kernel -----
__global__
void overlap_kinetic_MDsd(real_t* g_overlap, real_t* g_kinetic, 
                        const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                        const size_t num_threads,
                        const int num_basis)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;
	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 0, 2) * pow((M_PI/p), 1.5) * exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double s = 0;
	double k = 0;

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)/(p*p);
	k = (-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 8.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.5*(b.exponent*b.exponent)*(p*p) + 3.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)/(p*p);
	k = (-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 8.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.5*(b.exponent*b.exponent)*(p*p) + 3.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p);
	k = (-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 8.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 2.5*(b.exponent*b.exponent)*(p*p) + 3.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)/(p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 7.0*b.exponent*p + 7.0*(p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)/(p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 7.0*b.exponent*p + 7.0*(p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)/(p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 7.0*b.exponent*p + 7.0*(p*p))/(p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

}


// ----- (p|d) kernel -----
__global__
void overlap_kinetic_MDpd(real_t* g_overlap, real_t* g_kinetic, 
                        const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                        const size_t num_threads,
                        const int num_basis)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;
	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 1, 2) * pow((M_PI/p), 1.5) * exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double s = 0;
	double k = 0;

	s = (a.coordinate.x-b.coordinate.x)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 8.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 8.0*a.exponent*b.exponent*(p*p) + 7.0*a.exponent*(p*p*p) + 2.5*(b.exponent*b.exponent)*(p*p) - 3.5*b.exponent*(p*p*p) + (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p)) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p)) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p + 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p - 3.5*b.exponent*(p*p) + 3.5*(p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p + 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p - 3.5*b.exponent*(p*p) + 3.5*(p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 2.0*a.exponent*p + 7.0*b.exponent*p - 7.0*(p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.y-b.coordinate.y)*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p)) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 4.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 8.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 8.0*a.exponent*b.exponent*(p*p) + 7.0*a.exponent*(p*p*p) + 2.5*(b.exponent*b.exponent)*(p*p) - 3.5*b.exponent*(p*p*p) + (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.y-b.coordinate.y)*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p)) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p + 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p - 3.5*b.exponent*(p*p) + 3.5*(p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 2.0*a.exponent*p + 7.0*b.exponent*p - 7.0*(p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p + 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p - 3.5*b.exponent*(p*p) + 3.5*(p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.z-b.coordinate.z)*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p)) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.z-b.coordinate.z)*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p)) + (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*b.exponent*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5.0*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(-b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) + 2.0*(p*p)))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 2.0*a.exponent*p + 7.0*b.exponent*p - 7.0*(p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p + 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p) - 3.5*b.exponent*(p*p) + 3.5*(p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p + 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p) - 3.5*b.exponent*(p*p) + 3.5*(p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

}


// ----- (d|d) kernel -----
__global__
void overlap_kinetic_MDdd(real_t* g_overlap, real_t* g_kinetic, 
                        const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                        const size_t num_threads,
                        const int num_basis)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, true); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const int val = ((i == j) && (ab.y != ab.x)) ? 2 : 1;

	const double p = a.exponent + b.exponent;
	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 2, 2) * pow((M_PI/p), 1.5) * exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double s = 0;
	double k = 0;

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p);
	k = (-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 8.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 8.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 10.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 16.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 14.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 2.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 3.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent)*(p*p*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p*p*p) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 5.25*(b.exponent*b.exponent)*(p*p*p) + 5.25*b.exponent*(p*p*p*p) - 0.5*(p*p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+0, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+0, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+1, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+1, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+2, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+2, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.5*a.exponent*b.exponent*(p*p) + 3.5*a.exponent*(p*p*p) + 7.0*(b.exponent*b.exponent)*(p*p) - 7.0*b.exponent*(p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.5*a.exponent*b.exponent*(p*p) + 3.5*a.exponent*(p*p*p) + 7.0*(b.exponent*b.exponent)*(p*p) - 7.0*b.exponent*(p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 6*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p);
	k = (-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 8.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 8.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 10.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 16.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 14.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 2.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 3.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent)*(p*p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p*p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 5.25*(b.exponent*b.exponent)*(p*p*p) + 5.25*b.exponent*(p*p*p*p) - 0.5*(p*p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+1, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+1, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+2, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+2, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.5*a.exponent*b.exponent*(p*p) + 3.5*a.exponent*(p*p*p) + 7.0*(b.exponent*b.exponent)*(p*p) - 7.0*b.exponent*(p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 6*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.5*a.exponent*b.exponent*(p*p) + 3.5*a.exponent*(p*p*p) + 7.0*(b.exponent*b.exponent)*(p*p) - 7.0*b.exponent*(p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p);
	k = (-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 8.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 8.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 10.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 16.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 14.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 2.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 3.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent)*(p*p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p*p*p) - 5.25*(b.exponent*b.exponent)*(p*p*p) + 5.25*b.exponent*(p*p*p*p) - 0.5*(p*p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+2, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+2, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*b.exponent*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 6*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 6.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p) - 6.5*a.exponent*b.exponent*(p*p) + 3.5*a.exponent*(p*p*p) + 7.0*(b.exponent*b.exponent)*(p*p) - 7.0*b.exponent*(p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 6.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p) - 6.5*a.exponent*b.exponent*(p*p) + 3.5*a.exponent*(p*p*p) + 7.0*(b.exponent*b.exponent)*(p*p) - 7.0*b.exponent*(p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = b.exponent*(-(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 4*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 4*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = b.exponent*(-(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3.0*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(b.exponent*b.exponent)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 4*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = b.exponent*(-(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3.0*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+5, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	if(i==j) return;

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p);
	k = (-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+0, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+0, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p);
	k = (-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+0, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+0, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p);
	k = (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p)) - (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+1, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+1, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 8.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*(a.exponent*a.exponent)*(p*p) + 9.0*a.exponent*b.exponent*(p*p) - 7.0*a.exponent*(p*p*p) - 2.5*(b.exponent*b.exponent)*(p*p) + 3.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 8.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*(a.exponent*a.exponent)*(p*p) + 9.0*a.exponent*b.exponent*(p*p) - 7.0*a.exponent*(p*p*p) - 2.5*(b.exponent*b.exponent)*(p*p) + 3.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(-(b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(4.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2*(p*p)) - (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 8.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*(a.exponent*a.exponent)*(p*p) + 9.0*a.exponent*b.exponent*(p*p) - 7.0*a.exponent*(p*p*p) - 2.5*(b.exponent*b.exponent)*(p*p) + 3.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(-(b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(4.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2*(p*p)) - (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 6.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 8.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 2.0*(a.exponent*a.exponent)*(p*p) + 9.0*a.exponent*b.exponent*(p*p) - 7.0*a.exponent*(p*p*p) - 2.5*(b.exponent*b.exponent)*(p*p) + 3.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 4*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(-(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(4.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2*(p*p)) - (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+0, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 8.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*(a.exponent*a.exponent)*(p*p) + 9.0*a.exponent*b.exponent*(p*p) - 7.0*a.exponent*(p*p*p) - 2.5*(b.exponent*b.exponent)*(p*p) + 3.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+1, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 6.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 8.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 2.0*(a.exponent*a.exponent)*(p*p) + 9.0*a.exponent*b.exponent*(p*p) - 7.0*a.exponent*(p*p*p) - 2.5*(b.exponent*b.exponent)*(p*p) + 3.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+2, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 4*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+3, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(b.exponent*b.exponent)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 4*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+4, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

}


// ----- (s|f) kernel -----
__global__
void overlap_kinetic_MDsf(real_t* g_overlap, real_t* g_kinetic, 
                        const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                        const size_t num_threads,
                        const int num_basis)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;
	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 0, 3) * pow((M_PI/p), 1.5) * exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double s = 0;
	double k = 0;

	s = (a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 10.5*(b.exponent*b.exponent)*(p*p) + 13.5*b.exponent*(p*p*p) - 3.0*(p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 10.5*(b.exponent*b.exponent)*(p*p) + 13.5*b.exponent*(p*p*p) - 3.0*(p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 10.5*(b.exponent*b.exponent)*(p*p) + 13.5*b.exponent*(p*p*p) - 3.0*(p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 10.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.5*(b.exponent*b.exponent)*(p*p) + 4.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 10.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.5*(b.exponent*b.exponent)*(p*p) + 4.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 10.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.5*(b.exponent*b.exponent)*(p*p) + 4.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 10.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 3.5*(b.exponent*b.exponent)*(p*p) + 4.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 10.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 3.5*(b.exponent*b.exponent)*(p*p) + 4.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 10.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.5*(b.exponent*b.exponent)*(p*p) + 4.5*b.exponent*(p*p*p) - (p*p*p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent*a.exponent)/(p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent*a.exponent)*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent - 9.0*b.exponent*p + 9.0*(p*p))/(p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

}


// ----- (p|f) kernel -----
__global__
void overlap_kinetic_MDpf(real_t* g_overlap, real_t* g_kinetic, 
                        const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                        const size_t num_threads,
                        const int num_basis)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;
	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 1, 3) * pow((M_PI/p), 1.5) * exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double s = 0;
	double k = 0;

	s = (-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 0.75*(p*p))/(p*p*p*p);
	k = (2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 5.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 18.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 10.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p*p*p) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 5.25*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 1.5*(p*p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*a.exponent*b.exponent*(p*p) + 10.5*(b.exponent*b.exponent)*(p*p) - 13.5*b.exponent*(p*p*p) + 3.0*(p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 3.0*a.exponent*b.exponent*(p*p) + 10.5*(b.exponent*b.exponent)*(p*p) - 13.5*b.exponent*(p*p*p) + 3.0*(p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 10.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 10.0*a.exponent*b.exponent*(p*p) + 9.0*a.exponent*(p*p*p) + 3.5*(b.exponent*b.exponent)*(p*p) - 4.5*b.exponent*(p*p*p) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 10.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 10.0*a.exponent*b.exponent*(p*p) + 9.0*a.exponent*(p*p*p) + 3.5*(b.exponent*b.exponent)*(p*p) - 4.5*b.exponent*(p*p*p) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3.0*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 4*(p*p)) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 4*(p*p)) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(-b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 6*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*a.exponent*b.exponent*(p*p) + 10.5*(b.exponent*b.exponent)*(p*p) - 13.5*b.exponent*(p*p*p) + 3.0*(p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 0.75*(p*p))/(p*p*p*p);
	k = (2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 5.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 18.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 10.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p*p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 5.25*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 1.5*(p*p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 3.0*a.exponent*b.exponent*(p*p) + 10.5*(b.exponent*b.exponent)*(p*p) - 13.5*b.exponent*(p*p*p) + 3.0*(p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 4.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 10.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 10.0*a.exponent*b.exponent*(p*p) + 9.0*a.exponent*(p*p*p) + 3.5*(b.exponent*b.exponent)*(p*p) - 4.5*b.exponent*(p*p*p) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 4*(p*p)) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 4*(p*p)) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3.0*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 4.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 10.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 10.0*a.exponent*b.exponent*(p*p) + 9.0*a.exponent*(p*p*p) + 3.5*(b.exponent*b.exponent)*(p*p) - 4.5*b.exponent*(p*p*p) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(-b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 6*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*a.exponent*b.exponent*(p*p) + 10.5*(b.exponent*b.exponent)*(p*p) - 13.5*b.exponent*(p*p*p) + 3.0*(p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*a.exponent*b.exponent*(p*p) + 10.5*(b.exponent*b.exponent)*(p*p) - 13.5*b.exponent*(p*p*p) + 3.0*(p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 0.75*(p*p))/(p*p*p*p);
	k = (2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 5.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 18.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 10.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p*p*p) - 5.25*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 1.5*(p*p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 4*(p*p)) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 4*(p*p)) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 4.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 10.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 10.0*a.exponent*b.exponent*(p*p) + 9.0*a.exponent*(p*p*p) + 3.5*(b.exponent*b.exponent)*(p*p) - 4.5*b.exponent*(p*p*p) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 4.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 10.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 10.0*a.exponent*b.exponent*(p*p) + 9.0*a.exponent*(p*p*p) + 3.5*(b.exponent*b.exponent)*(p*p) - 4.5*b.exponent*(p*p*p) + (p*p*p*p))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*b.exponent*(-b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 6*(p*p)))/(p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

}


// ----- (d|f) kernel -----
__global__
void overlap_kinetic_MDdf(real_t* g_overlap, real_t* g_kinetic, 
                        const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                        const size_t num_threads,
                        const int num_basis)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;
	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 2, 3) * pow((M_PI/p), 1.5) * exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double s = 0;
	double k = 0;

	s = (a.coordinate.x-b.coordinate.x)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*p + 2.25*a.exponent*(p*p) - 1.5*b.exponent*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 10.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 16.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p*p) + 36.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 27.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) - 10.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 23.25*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 20.25*a.exponent*b.exponent*(p*p*p*p) - 1.5*a.exponent*(p*p*p*p*p) + 10.5*(b.exponent*b.exponent*b.exponent)*(p*p*p) - 13.5*(b.exponent*b.exponent)*(p*p*p*p) + 3.0*b.exponent*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) - (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 8.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 10.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 11.0 *((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 20.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 18.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent)*(p*p*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p*p*p) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 6.75*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 8.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 10.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 11.0 *((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 20.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 18.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent)*(p*p*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p*p*p) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 6.75*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - 3.0*(p*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) - (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(-b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent)) + (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(-2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 6*(p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*p + 2.25*a.exponent*(p*p) - 1.5*b.exponent*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 10.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 16.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p*p) + 36.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 27.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) - 10.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) - 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 23.25*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 20.25*a.exponent*b.exponent*(p*p*p*p) - 1.5*a.exponent*(p*p*p*p*p) + 10.5*(b.exponent*b.exponent*b.exponent)*(p*p*p) - 13.5*(b.exponent*b.exponent)*(p*p*p*p) + 3.0*b.exponent*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 8.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 10.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 11.0 *((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 20.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 18.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent)*(p*p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p*p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 6.75*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) - (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - 3.0*(p*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) - (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 8.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 10.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 11.0 *((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 20.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 18.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent)*(p*p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p*p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 6.75*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(-b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent)) + (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 6*(p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - 7.0*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - 7.0*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*p - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*p + 2.25*a.exponent*(p*p) - 1.5*b.exponent*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 10.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 16.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p*p) + 36.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 27.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) - 10.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) - 23.25*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 20.25*a.exponent*b.exponent*(p*p*p*p) - 1.5*a.exponent*(p*p*p*p*p) + 10.5*(b.exponent*b.exponent*b.exponent)*(p*p*p) - 13.5*(b.exponent*b.exponent)*(p*p*p*p) + 3.0*b.exponent*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)) - (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) - (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 8.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 10.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 11.0 *((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 20.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 18.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent)*(p*p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p*p*p) - 6.75*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent) + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 4.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 8.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 10.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 11.0 *((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 20.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 18.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent)*(p*p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p*p*p) - 6.75*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(-b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent)) + (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 6*(p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p - 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 21.0 *((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 10.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p*p*p) + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 1.5*a.exponent*b.exponent*(p*p*p) + 5.25*(b.exponent*b.exponent)*(p*p*p) - 6.75*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p - 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 21.0 *((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 10.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p*p*p) + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 1.5*a.exponent*b.exponent*(p*p*p) + 5.25*(b.exponent*b.exponent)*(p*p*p) - 6.75*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 4.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) + 6.0*a.exponent*b.exponent*(p*p) - 10.5*(b.exponent*b.exponent)*(p*p) + 13.5*b.exponent*(p*p*p) - 3.0*(p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.y-b.coordinate.y)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*b.exponent*((a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - (a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) - (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*b.exponent*((a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) - (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(-b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - (p*p*p*p) - 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 4*(p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(-b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - (p*p*p*p) - 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 4*(p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*((-2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p - 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 7.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 21.0 *((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 10.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p*p*p) + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 1.5*a.exponent*b.exponent*(p*p*p) + 5.25*(b.exponent*b.exponent)*(p*p*p) - 6.75*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 4.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 6.0*a.exponent*b.exponent*(p*p) - 10.5*(b.exponent*b.exponent)*(p*p) + 13.5*b.exponent*(p*p*p) - 3.0*(p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p - 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 21.0 *((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 10.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p*p*p) - 1.5*a.exponent*b.exponent*(p*p*p) + 5.25*(b.exponent*b.exponent)*(p*p*p) - 6.75*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(-b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - (p*p*p*p) - 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 4*(p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*b.exponent*((a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) - (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5.0*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.z-b.coordinate.z)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*b.exponent*((a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - (a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3.0*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) - (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(-b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - (p*p*p*p) - 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 4*(p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*((-2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) + 4.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 6.0*a.exponent*b.exponent*(p*p) - 10.5*(b.exponent*b.exponent)*(p*p) + 13.5*b.exponent*(p*p*p) - 3.0*(p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p - 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 7.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 21.0 *((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 10.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p*p*p) + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 1.5*a.exponent*b.exponent*(p*p*p) + 5.25*(b.exponent*b.exponent)*(p*p*p) - 6.75*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p - 0.75*(p*p))/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*b.exponent*(-2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 7.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 21.0 *((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 10.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p*p*p) - 1.5*a.exponent*b.exponent*(p*p*p) + 5.25*(b.exponent*b.exponent)*(p*p*p) - 6.75*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(-b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - (p*p*p*p) - 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 4*(p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.z-b.coordinate.z)*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.y-b.coordinate.y)*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(-b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - (p*p*p*p) - 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*a.exponent*p + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 4*(p*p)))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.z-b.coordinate.z)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.z-b.coordinate.z)*b.exponent*((a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3.0*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) - (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = -(a.coordinate.y-b.coordinate.y)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*b.exponent*(-(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5.0*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

	s = (a.coordinate.x-b.coordinate.x)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*a.exponent*b.exponent*((-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k);

}


// ----- (f|f) kernel -----
__global__
void overlap_kinetic_MDff(real_t* g_overlap, real_t* g_kinetic, 
                        const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                        const size_t num_threads,
                        const int num_basis)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, true); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const int val = ((i == j) && (ab.y != ab.x)) ? 2 : 1;

	const double p = a.exponent + b.exponent;
	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 3, 3) * pow((M_PI/p), 1.5) * exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double s = 0;
	double k = 0;

	s = (-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 2.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(p*p) - 6.75*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p) + 2.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p) + 1.875*(p*p*p))/(p*p*p*p*p*p);
	k = (2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 15.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*p - 7.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 48.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) - 54.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 40.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 10.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 42.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 20.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p*p*p) + 69.75*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) - 60.75*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p*p*p*p) - 15.75*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p*p) + 20.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent)*(p*p*p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p*p*p*p) - 3.75*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) - 3.75*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) - 16.875*(b.exponent*b.exponent)*(p*p*p*p) + 16.875*b.exponent*(p*p*p*p*p) - 2.25*(p*p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+0, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+0, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+1, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+1, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+2, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+2, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p))/(p*p*p*p*p*p);
	k = (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + p*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*p) + 0.5*p*(-a.exponent + b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p))) + ((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+3, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+3, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*p - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent)*p + 1.5*a.exponent*(p*p) - 2.25*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 10.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 33.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 30.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent)*(p*p*p) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p*p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 21.0 *a.exponent*b.exponent*(p*p*p) + 13.5*a.exponent*(p*p*p*p) + 20.25*(b.exponent*b.exponent)*(p*p*p) - 20.25*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+4, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+4, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*p - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent)*p + 1.5*a.exponent*(p*p) - 2.25*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 10.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 33.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 30.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent)*(p*p*p) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p*p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 21.0 *a.exponent*b.exponent*(p*p*p) + 13.5*a.exponent*(p*p*p*p) + 20.25*(b.exponent*b.exponent)*(p*p*p) - 20.25*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+5, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+5, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p))/(p*p*p*p*p*p);
	k = (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + p*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - 3.0*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*p) + 0.5*p*(-a.exponent + b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p))) + ((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+6, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+6, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + 2.0*b.exponent*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+7, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+7, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + 2.0*b.exponent*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+8, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+8, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) + 22.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p*p) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 8.25*b.exponent*(p*p*p) + 6.75*(p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+0, j+9, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+0, j+9, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 2.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(p*p) - 6.75*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p) + 2.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p) + 1.875*(p*p*p))/(p*p*p*p*p*p);
	k = (2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*p - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 3.75*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 15.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*p - 7.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 48.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) - 54.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 40.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 10.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p*p) - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 42.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 20.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p*p*p) + 69.75*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) - 60.75*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p*p*p*p) - 15.75*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p*p) + 20.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent)*(p*p*p*p) - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p*p*p*p) - 3.75*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) - 16.875*(b.exponent*b.exponent)*(p*p*p*p) + 16.875*b.exponent*(p*p*p*p*p) - 2.25*(p*p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+1, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+1, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+2, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+2, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*p - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent)*p + 1.5*a.exponent*(p*p) - 2.25*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 10.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 33.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 30.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent)*(p*p*p) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p*p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 21.0 *a.exponent*b.exponent*(p*p*p) + 13.5*a.exponent*(p*p*p*p) + 20.25*(b.exponent*b.exponent)*(p*p*p) - 20.25*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+3, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+3, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p))/(p*p*p*p*p*p);
	k = (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + p*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*p) + 0.5*p*(-a.exponent + b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p))) + ((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+4, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+4, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*(-2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + 2.0*b.exponent*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+5, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+5, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + 2.0*b.exponent*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+6, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+6, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p))/(p*p*p*p*p*p);
	k = (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + p*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - 3.0*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*p) + 0.5*p*(-a.exponent + b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p))) + ((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+7, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+7, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*p - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent)*p + 1.5*a.exponent*(p*p) - 2.25*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 10.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 33.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 30.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent)*(p*p*p) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p*p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 21.0 *a.exponent*b.exponent*(p*p*p) + 13.5*a.exponent*(p*p*p*p) + 20.25*(b.exponent*b.exponent)*(p*p*p) - 20.25*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+8, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+8, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) + 22.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) - 8.25*b.exponent*(p*p*p) + 6.75*(p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+9, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+9, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 2.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(p*p) - 6.75*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p) + 2.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p) + 1.875*(p*p*p))/(p*p*p*p*p*p);
	k = (2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*p - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 3.75*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*p - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 3.75*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 15.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 7.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 48.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) - 54.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) + 40.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 10.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p*p) - 42.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 20.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p*p*p) + 69.75*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) - 60.75*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p*p*p*p) - 15.75*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p*p) + 20.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent)*(p*p*p*p) - 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p*p*p*p) - 16.875*(b.exponent*b.exponent)*(p*p*p*p) + 16.875*b.exponent*(p*p*p*p*p) - 2.25*(p*p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+2, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+2, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)*(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + 2.0*b.exponent*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+3, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+3, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)*(-2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + 2.0*b.exponent*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+4, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+4, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p))/(p*p*p*p*p*p);
	k = (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + p*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*p) + 0.5*p*(-a.exponent + b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p))) + ((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+5, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+5, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*p - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent)*p + 1.5*a.exponent*(p*p) - 2.25*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 10.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 6.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 33.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 30.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent)*(p*p*p) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p*p*p) - 21.0 *a.exponent*b.exponent*(p*p*p) + 13.5*a.exponent*(p*p*p*p) + 20.25*(b.exponent*b.exponent)*(p*p*p) - 20.25*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+6, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+6, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*p - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent)*p + 1.5*a.exponent*(p*p) - 2.25*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 10.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 6.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 33.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p*p) - 30.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent)*(p*p*p) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p*p*p) - 21.0 *a.exponent*b.exponent*(p*p*p) + 13.5*a.exponent*(p*p*p*p) + 20.25*(b.exponent*b.exponent)*(p*p*p) - 20.25*b.exponent*(p*p*p*p) + 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+7, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+7, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p))/(p*p*p*p*p*p);
	k = (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + p*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*p) + 0.5*p*(-a.exponent + b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p))) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)) + ((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5.0*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+8, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+8, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*p + 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p) + 22.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p*p) - 8.25*b.exponent*(p*p*p) + 6.75*(p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+9, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+9, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(-(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 3*(p*p)*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) + (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*((((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))) + (a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 3*(p*p)*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) + (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*p - 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 4*(p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-(-2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p))*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + (b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*p - 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 4*(p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 3*(p*p)*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) + (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*((((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + (a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-(-2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p))*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + (b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 5.0*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 3.0*(p*p)*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) + (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*((((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + (a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-(-2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p))*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + (b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3.0*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+6, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+6, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*p - 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 4*(p*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+6, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+6, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 3*(p*p)*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) + (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+6, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+6, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-(-2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p))*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + (b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+6, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+6, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3.0*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+7, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+7, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 3*(p*p)*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) - (a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5.0*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+7, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+7, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p))*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + (b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+7, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+7, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 5.0*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+8, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+8, j+8, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p))*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + (b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - 3*(p*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+8, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+8, j+9, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = b.exponent*(-(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+9, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+9, j+9, num_basis)], 1.0 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	if(i==j) return;

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+1, j+0, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+1, j+0, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - 7.0*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+0, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+0, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(2.0*b.exponent*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-2.0*a.exponent + b.exponent) - (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + p*(-a.exponent*p + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - 7.0*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+2, j+1, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+2, j+1, num_basis)], 0.06666666666666667 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p*p*p) + (b.exponent*b.exponent)*(-3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 3.0*p) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p) + 0.5*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 7*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) - 1.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*p - 2.25*a.exponent*(p*p) + 1.5*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 22.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p*p) - 39.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 10.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 26.25*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 20.25*a.exponent*b.exponent*(p*p*p*p) + 1.5*a.exponent*(p*p*p*p*p) - 10.5*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 13.5*(b.exponent*b.exponent)*(p*p*p*p) - 3.0*b.exponent*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+3, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+3, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*p - 2.25*a.exponent*(p*p) + 1.5*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 22.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p*p) - 39.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 10.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 26.25*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 20.25*a.exponent*b.exponent*(p*p*p*p) + 1.5*a.exponent*(p*p*p*p*p) - 10.5*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 13.5*(b.exponent*b.exponent)*(p*p*p*p) - 3.0*b.exponent*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p*p*p) + (b.exponent*b.exponent)*(-3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 3.0*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p) + 0.5*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 7*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) - 1.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(-(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 3*(p*p)*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) + (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+4, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+4, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*p - 2.25*a.exponent*(p*p) + 1.5*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 22.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p*p) - 39.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 10.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 26.25*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 20.25*a.exponent*b.exponent*(p*p*p*p) + 1.5*a.exponent*(p*p*p*p*p) - 10.5*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 13.5*(b.exponent*b.exponent)*(p*p*p*p) - 3.0*b.exponent*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p*p*p) + (b.exponent*b.exponent)*(-3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 3.0*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2.0*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p) + 0.5*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 7*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) - 1.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 3*(p*p)*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) + (b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*p - 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 4*(p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+5, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+5, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p*p*p) + (b.exponent*b.exponent)*(-3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 3.0*p) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p) + 0.5*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + 7.0*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) - 1.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+6, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+6, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+6, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+6, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*p + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*p - 2.25*a.exponent*(p*p) + 1.5*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 22.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p*p) - 39.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 10.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) - 4.5*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 26.25*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 20.25*a.exponent*b.exponent*(p*p*p*p) + 1.5*a.exponent*(p*p*p*p*p) - 10.5*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 13.5*(b.exponent*b.exponent)*(p*p*p*p) - 3.0*b.exponent*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+6, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+6, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+6, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+6, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*((((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))) + (a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+6, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+6, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 3*(p*p)*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) + (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5.0*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+6, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+6, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+7, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+7, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p*p*p) + (b.exponent*b.exponent)*(-3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 3.0*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p) + 0.5*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 7.0*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) - 1.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+7, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+7, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*p + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*p - 2.25*a.exponent*(p*p) + 1.5*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 22.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p*p) - 39.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 10.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) - 4.5*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 26.25*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 20.25*a.exponent*b.exponent*(p*p*p*p) + 1.5*a.exponent*(p*p*p*p*p) - 10.5*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 13.5*(b.exponent*b.exponent)*(p*p*p*p) - 3.0*b.exponent*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+7, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+7, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*((((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + (a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+7, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+7, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+7, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+7, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 3*(p*p)*(-b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) + (b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+7, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+7, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*p - 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 5*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 4*(p*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+7, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+7, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(p*p) + 2.0*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2.0*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - 7*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3.0*(p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+8, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+8, j+0, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*p - 2.25*a.exponent*(p*p) + 1.5*b.exponent*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent*b.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) + 22.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p*p) - 39.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) + 27.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p*p) + 10.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p*p) + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(p*p) - 4.5*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 26.25*a.exponent*(b.exponent*b.exponent)*(p*p*p) - 20.25*a.exponent*b.exponent*(p*p*p*p) + 1.5*a.exponent*(p*p*p*p*p) - 10.5*(b.exponent*b.exponent*b.exponent)*(p*p*p) + 13.5*(b.exponent*b.exponent)*(p*p*p*p) - 3.0*b.exponent*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+8, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+8, j+1, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p*p*p) + (b.exponent*b.exponent)*(-3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 3.0*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2.0*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p) + 0.5*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - 1.5*(p*p*p) - (p*p)*(3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 7*b.exponent*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) - 1.5*(p*p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+8, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+8, j+2, num_basis)], 0.14907119849998599 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*p - 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent)*(p*p*p*p) + (b.exponent*b.exponent)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(p*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 3.0*p) - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 1.5*(p*p*p) + (p*p)*(3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 5*b.exponent*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + b.exponent*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 4*(p*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 0.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+8, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+8, j+3, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 3*(p*p)*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) + (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+8, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+8, j+4, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = -(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (-b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*((b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 5*b.exponent*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p*p*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+8, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+8, j+5, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*((((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(-2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 3*(p*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + (a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (p*p) - p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+8, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+8, j+6, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + p) - (p*p))*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(3.0*a.exponent*(p*p) + a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 3.0*(p*p)*(-b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-a.exponent + b.exponent))) + (b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+8, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+8, j+7, num_basis)], 0.3333333333333333 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 12.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 6.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) - 24.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 10.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(p*p*p*p) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*a.exponent*b.exponent*(p*p*p) - 5.25*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+9, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+9, j+0, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 12.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p + 6.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) - 24.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 10.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(p*p*p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 3.0*a.exponent*b.exponent*(p*p*p) - 5.25*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+9, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+9, j+1, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 0.75*(p*p))/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 12.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*p - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 6.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent*a.exponent)*b.exponent*(p*p) - 24.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(b.exponent*b.exponent)*(p*p) + 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*b.exponent*(p*p*p) + 10.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent*b.exponent)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*(b.exponent*b.exponent)*(p*p*p) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(p*p*p*p) + 3.0*a.exponent*b.exponent*(p*p*p) - 5.25*(b.exponent*b.exponent)*(p*p*p) + 6.75*b.exponent*(p*p*p*p) - 1.5*(p*p*p*p*p))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+9, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+9, j+2, num_basis)], 0.25819888974716115 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*((a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+9, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+9, j+3, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*((a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+9, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+9, j+4, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*((a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+9, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+9, j+5, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*((a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + (((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+9, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+9, j+6, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*((a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + (((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+9, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+9, j+7, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

	s = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)/(p*p*p*p*p*p);
	k = (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*((a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 2.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (p*p) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 3*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + (a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(2.0*a.exponent*p - 2.0*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (p*p)) + (((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(b.exponent*(-3.0*a.exponent*(p*p) - a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*a.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2.0*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + (p*p*p*p) + 5*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p*p*p);
	atomicAdd(&g_overlap[calc_result_index(i+9, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * s * val);
	atomicAdd(&g_kinetic[calc_result_index(i+9, j+8, num_basis)], 0.5773502691896257 * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * coefandNorm * k * val);

}



// ----- (s|s) kernel -----
__global__ 
void nuclear_attraction_MDss(real_t* g_nucattr, const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors,  
                           const Atom* g_atom, const int num_atoms, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                           const size_t num_threads,
                           const int num_basis, const real_t* g_boys_grid)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, true); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const int val = ((i == j) && (ab.y != ab.x)) ? 2 : 1;

	const double p = a.exponent + b.exponent;

	const double3 P = make_double3((a.exponent*a.coordinate.x + b.exponent*b.coordinate.x)/p, (a.exponent*a.coordinate.y + b.exponent*b.coordinate.y)/p, (a.exponent*a.coordinate.z + b.exponent*b.coordinate.z)/p);

	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 0, 0) * ((2*M_PI)/p)* exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double result = 0;

	for(int nuc=0; nuc<num_atoms; nuc++){
		result += g_atom[nuc].atomic_number * getSingleBoys(0, p*calc_dist_GPU(P, g_atom[nuc].coordinate), g_boys_grid);
	}

	atomicAdd(&g_nucattr[calc_result_index(i+0, j+0, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j] * result*val);
}


// ----- (s|p) kernel -----
__global__ 
void nuclear_attraction_MDsp(real_t* g_nucattr, const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors,  
                           const Atom* g_atom, const int num_atoms, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                           const size_t num_threads,
                           const int num_basis, const real_t* g_boys_grid)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;

	const double3 P = make_double3((a.exponent*a.coordinate.x + b.exponent*b.coordinate.x)/p, (a.exponent*a.coordinate.y + b.exponent*b.coordinate.y)/p, (a.exponent*a.coordinate.z + b.exponent*b.coordinate.z)/p);

	double Boys[2];

	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 0, 1) * ((2*M_PI)/p)* exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double result[3] = {0,0,0};

	for(int nuc=0; nuc<num_atoms; nuc++){
		getIncrementalBoys(1, p*calc_dist_GPU(P, g_atom[nuc].coordinate), g_boys_grid, Boys);
		result[0] += g_atom[nuc].atomic_number * ((a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent/p - Boys[1]*(P.x-g_atom[nuc].coordinate.x));
		result[1] += g_atom[nuc].atomic_number * ((a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent/p - Boys[1]*(P.y-g_atom[nuc].coordinate.y));
		result[2] += g_atom[nuc].atomic_number * ((a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent/p - Boys[1]*(P.z-g_atom[nuc].coordinate.z));
	}

	atomicAdd(&g_nucattr[calc_result_index(i+0, j+0, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[0]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+1, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[1]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+2, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[2]);
}


// ----- (p|p) kernel -----
__global__ 
void nuclear_attraction_MDpp(real_t* g_nucattr, const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors,  
                           const Atom* g_atom, const int num_atoms, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                           const size_t num_threads,
                           const int num_basis, const real_t* g_boys_grid)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, true); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const int val = ((i == j) && (ab.y != ab.x)) ? 2 : 1;

	const double p = a.exponent + b.exponent;

	const double3 P = make_double3((a.exponent*a.coordinate.x + b.exponent*b.coordinate.x)/p, (a.exponent*a.coordinate.y + b.exponent*b.coordinate.y)/p, (a.exponent*a.coordinate.z + b.exponent*b.coordinate.z)/p);

	double Boys[3];

	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 1, 1) * ((2*M_PI)/p)* exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double result[9] = {0,0,0,0,0,0,0,0,0};

	for(int nuc=0; nuc<num_atoms; nuc++){
		getIncrementalBoys(2, p*calc_dist_GPU(P, g_atom[nuc].coordinate), g_boys_grid, Boys);
		result[0] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + p*(-0.5*Boys[1] + Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))/(p*p));
		result[1] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent + Boys[1]*p*((a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y) - (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p))/(p*p));
		result[2] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent + Boys[1]*p*((a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p))/(p*p));
		result[3] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent + Boys[1]*p*(-(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p))/(p*p));
		result[4] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + p*(-0.5*Boys[1] + Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))/(p*p));
		result[5] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent + Boys[1]*p*((a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p))/(p*p));
		result[6] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent + Boys[1]*p*(-(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p))/(p*p));
		result[7] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent + Boys[1]*p*(-(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p))/(p*p));
		result[8] += g_atom[nuc].atomic_number * ((-(a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + p*(-0.5*Boys[1] + Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))/(p*p));
	}

	atomicAdd(&g_nucattr[calc_result_index(i+0, j+0, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[0]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+1, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[1]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+2, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[2]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+1, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[4]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+2, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[5]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+2, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[8]*val);
	if(i==j) return;
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+0, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[3]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+0, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[6]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+1, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[7]*val);
}


// ----- (s|d) kernel -----
__global__ 
void nuclear_attraction_MDsd(real_t* g_nucattr, const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors,  
                           const Atom* g_atom, const int num_atoms, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                           const size_t num_threads,
                           const int num_basis, const real_t* g_boys_grid)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;

	const double3 P = make_double3((a.exponent*a.coordinate.x + b.exponent*b.coordinate.x)/p, (a.exponent*a.coordinate.y + b.exponent*b.coordinate.y)/p, (a.exponent*a.coordinate.z + b.exponent*b.coordinate.z)/p);

	double Boys[3];

	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 0, 2) * ((2*M_PI)/p)* exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double result[6] = {0,0,0,0,0,0};

	for(int nuc=0; nuc<num_atoms; nuc++){
		getIncrementalBoys(2, p*calc_dist_GPU(P, g_atom[nuc].coordinate), g_boys_grid, Boys);
		result[0] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + p*(-0.5*Boys[1] + Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))/(p*p));
		result[1] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p + Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + p*(-0.5*Boys[1] + Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))/(p*p));
		result[2] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p + Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + p*(-0.5*Boys[1] + Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))/(p*p));
		result[3] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*(a.exponent*a.exponent) - Boys[1]*a.exponent*p*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p))/(p*p));
		result[4] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent) - Boys[1]*a.exponent*p*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p))/(p*p));
		result[5] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent) - Boys[1]*a.exponent*p*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p))/(p*p));
	}

	atomicAdd(&g_nucattr[calc_result_index(i+0, j+0, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[0]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+1, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[1]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+2, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[2]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+3, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[3]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+4, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[4]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+5, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[5]);
}


// ----- (p|d) kernel -----
__global__ 
void nuclear_attraction_MDpd(real_t* g_nucattr, const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors,  
                           const Atom* g_atom, const int num_atoms, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                           const size_t num_threads,
                           const int num_basis, const real_t* g_boys_grid)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;

	const double3 P = make_double3((a.exponent*a.coordinate.x + b.exponent*b.coordinate.x)/p, (a.exponent*a.coordinate.y + b.exponent*b.coordinate.y)/p, (a.exponent*a.coordinate.z + b.exponent*b.coordinate.z)/p);

	double Boys[4];

	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 1, 2) * ((2*M_PI)/p)* exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double result[18] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

	for(int nuc=0; nuc<num_atoms; nuc++){
		getIncrementalBoys(3, p*calc_dist_GPU(P, g_atom[nuc].coordinate), g_boys_grid, Boys);
		result[0] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 2*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(-2*(a.coordinate.x-b.coordinate.x)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*p + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p));
		result[1] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p - (a.coordinate.x-b.coordinate.x)*Boys[0]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + p*(0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p));
		result[2] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p - (a.coordinate.x-b.coordinate.x)*Boys[0]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + p*(0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p));
		result[3] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent) - (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + p*(-0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*p - Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p)))/(p*p*p));
		result[4] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) - (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + p*(-0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*p - Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p)))/(p*p*p));
		result[5] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*b.exponent + Boys[1]*a.exponent*p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)) + Boys[2]*(p*p)*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p))/(p*p*p));
		result[6] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) - (a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + p*(0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*p - Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p)))/(p*p*p));
		result[7] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 2*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(-2*(a.coordinate.y-b.coordinate.y)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*p + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p));
		result[8] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p - (a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + p*(0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p));
		result[9] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent) - (a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p));
		result[10] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*b.exponent + Boys[1]*a.exponent*p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)) + Boys[2]*(p*p)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p))/(p*p*p));
		result[11] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) - (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + p*(-0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*p - Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p)))/(p*p*p));
		result[12] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - (a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + p*(0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*p - Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p)))/(p*p*p));
		result[13] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - (a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + p*(0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*p - Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p)))/(p*p*p));
		result[14] += g_atom[nuc].atomic_number * (((a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 2*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(-2*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) + Boys[2]*(P.z-g_atom[nuc].coordinate.z)*p + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p));
		result[15] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*b.exponent + Boys[1]*a.exponent*p*(-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)) + Boys[2]*(p*p)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p))/(p*p*p));
		result[16] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent) - (a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p));
		result[17] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent) - (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) + p*(-0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p));
	}

	atomicAdd(&g_nucattr[calc_result_index(i+0, j+0, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[0]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+1, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[1]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+2, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[2]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+3, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[3]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+4, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[4]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+5, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[5]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+0, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[6]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+1, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[7]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+2, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[8]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+3, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[9]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+4, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[10]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+5, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[11]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+0, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[12]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+1, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[13]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+2, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[14]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+3, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[15]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+4, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[16]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+5, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[17]);
}


// ----- (d|d) kernel -----
__global__ 
void nuclear_attraction_MDdd(real_t* g_nucattr, const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors,  
                           const Atom* g_atom, const int num_atoms, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                           const size_t num_threads,
                           const int num_basis, const real_t* g_boys_grid)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, true); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const int val = ((i == j) && (ab.y != ab.x)) ? 2 : 1;

	const double p = a.exponent + b.exponent;

	const double3 P = make_double3((a.exponent*a.coordinate.x + b.exponent*b.coordinate.x)/p, (a.exponent*a.coordinate.y + b.exponent*b.coordinate.y)/p, (a.exponent*a.coordinate.z + b.exponent*b.coordinate.z)/p);

	double Boys[5];

	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 2, 2) * ((2*M_PI)/p)* exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double result[36] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

	for(int nuc=0; nuc<num_atoms; nuc++){
		getIncrementalBoys(4, p*calc_dist_GPU(P, g_atom[nuc].coordinate), g_boys_grid, Boys);
		result[0] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 2*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p))/(p*p*p*p));
		result[1] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[2] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[3] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p));
		result[4] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p));
		result[5] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)) + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)))/(p*p*p*p));
		result[6] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[7] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 2*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p))/(p*p*p*p));
		result[8] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*p*((Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) + p*(2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[9] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[10] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.y-g_atom[nuc].coordinate.y) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[11] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 2.0*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - Boys[3]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[12] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[13] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*p*((Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + p*(-2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[14] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 2*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p))/(p*p*p*p));
		result[15] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[16] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[17] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[18] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p));
		result[19] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[20] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*(b.exponent*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[21] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*((a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[22] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(a.exponent - b.exponent)*(-(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)) - (a.coordinate.x-b.coordinate.x)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent) - Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)))/(p*p*p*p));
		result[23] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent)*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)) - (a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent) - Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[24] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p));
		result[25] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(b.exponent*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[26] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[27] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(a.exponent - b.exponent)*((a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)) - (a.coordinate.x-b.coordinate.x)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent) - Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)))/(p*p*p*p));
		result[28] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*((a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[29] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)) - (a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent) - Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[30] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)) - 2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(b.exponent*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)))/(p*p*p*p));
		result[31] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - Boys[3]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[32] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[33] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)) - (a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent) - Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[34] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)) - (a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent) - Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[35] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) + Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*((Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*((a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
	}

	atomicAdd(&g_nucattr[calc_result_index(i+0, j+0, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[0]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+1, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[1]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+2, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[2]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+3, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[3]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+4, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[4]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+5, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[5]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+1, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[7]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+2, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[8]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+3, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[9]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+4, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[10]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+5, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[11]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+2, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[14]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+3, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[15]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+4, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[16]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+5, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[17]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+3, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[21]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+4, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[22]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+5, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[23]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+4, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[28]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+5, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[29]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+5, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[35]*val);
	if(i==j) return;
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+0, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[6]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+0, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[12]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+1, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[13]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+0, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[18]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+1, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[19]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+2, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[20]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+0, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[24]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+1, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[25]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+2, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[26]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+3, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[27]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+0, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[30]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+1, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[31]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+2, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[32]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+3, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[33]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+4, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[34]*val);
}


// ----- (s|f) kernel -----
__global__ 
void nuclear_attraction_MDsf(real_t* g_nucattr, const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors,  
                           const Atom* g_atom, const int num_atoms, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                           const size_t num_threads,
                           const int num_basis, const real_t* g_boys_grid)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;

	const double3 P = make_double3((a.exponent*a.coordinate.x + b.exponent*b.coordinate.x)/p, (a.exponent*a.coordinate.y + b.exponent*b.coordinate.y)/p, (a.exponent*a.coordinate.z + b.exponent*b.coordinate.z)/p);

	double Boys[4];

	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 0, 3) * ((2*M_PI)/p)* exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double result[10] = {0,0,0,0,0,0,0,0,0,0};

	for(int nuc=0; nuc<num_atoms; nuc++){
		getIncrementalBoys(3, p*calc_dist_GPU(P, g_atom[nuc].coordinate), g_boys_grid, Boys);
		result[0] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + p*(-1.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*p + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p));
		result[1] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + p*(-1.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*p + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p));
		result[2] += g_atom[nuc].atomic_number * (((a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + p*(-1.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + Boys[2]*(P.z-g_atom[nuc].coordinate.z)*p + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p));
		result[3] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*p + (a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p));
		result[4] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*p + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + p*(-0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*p - Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p)))/(p*p*p));
		result[5] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*p + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + p*(-0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*p - Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p)))/(p*p*p));
		result[6] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*p + (a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p));
		result[7] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*p + (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + p*(-0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p));
		result[8] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*p + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + p*(-0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*p - Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p)))/(p*p*p));
		result[9] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent*a.exponent) - Boys[1]*(a.exponent*a.exponent)*p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)) + Boys[2]*a.exponent*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p))/(p*p*p));
	}

	atomicAdd(&g_nucattr[calc_result_index(i+0, j+0, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[0]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+1, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[1]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+2, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[2]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+3, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[3]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+4, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[4]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+5, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[5]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+6, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[6]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+7, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[7]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+8, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[8]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+9, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[9]);
}


// ----- (p|f) kernel -----
__global__ 
void nuclear_attraction_MDpf(real_t* g_nucattr, const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors,  
                           const Atom* g_atom, const int num_atoms, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                           const size_t num_threads,
                           const int num_basis, const real_t* g_boys_grid)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;

	const double3 P = make_double3((a.exponent*a.coordinate.x + b.exponent*b.coordinate.x)/p, (a.exponent*a.coordinate.y + b.exponent*b.coordinate.y)/p, (a.exponent*a.coordinate.z + b.exponent*b.coordinate.z)/p);

	double Boys[5];

	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 1, 3) * ((2*M_PI)/p)* exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double result[30] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

	for(int nuc=0; nuc<num_atoms; nuc++){
		getIncrementalBoys(4, p*calc_dist_GPU(P, g_atom[nuc].coordinate), g_boys_grid, Boys);
		result[0] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 1.5*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p))/(p*p*p*p));
		result[1] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 1.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[2] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 1.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[3] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*(-(a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[4] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p));
		result[5] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p));
		result[6] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*(-(a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[7] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[8] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.y-g_atom[nuc].coordinate.y) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[9] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(a.exponent - b.exponent)*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)) - (a.coordinate.x-b.coordinate.x)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*(-0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)))/(p*p*p*p));
		result[10] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 1.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p));
		result[11] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(4*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 1.5*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p))/(p*p*p*p));
		result[12] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + p*(1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 1.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[13] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[14] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[15] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(-(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)) - 2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)))/(p*p*p*p));
		result[16] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[17] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(-(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*(-(a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[18] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(-2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - Boys[3]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[19] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent)*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)) - (a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) - p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[20] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 1.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p));
		result[21] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + p*(1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 1.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - Boys[3]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[22] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(4*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 1.5*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p))/(p*p*p*p));
		result[23] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.y-g_atom[nuc].coordinate.y) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p));
		result[24] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*((a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)) - 2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)))/(p*p*p*p));
		result[25] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[26] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[27] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(-2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[28] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*((Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + p*(2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.25*Boys[2]*p - 0.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p)*(-0.5*Boys[3] + Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
		result[29] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*(a.exponent*a.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)) - (a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) - p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p));
	}

	atomicAdd(&g_nucattr[calc_result_index(i+0, j+0, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[0]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+1, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[1]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+2, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[2]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+3, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[3]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+4, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[4]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+5, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[5]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+6, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[6]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+7, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[7]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+8, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[8]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+9, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[9]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+0, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[10]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+1, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[11]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+2, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[12]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+3, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[13]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+4, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[14]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+5, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[15]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+6, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[16]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+7, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[17]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+8, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[18]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+9, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[19]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+0, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[20]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+1, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[21]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+2, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[22]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+3, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[23]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+4, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[24]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+5, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[25]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+6, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[26]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+7, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[27]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+8, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[28]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+9, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[29]);
}


// ----- (d|f) kernel -----
__global__ 
void nuclear_attraction_MDdf(real_t* g_nucattr, const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors,  
                           const Atom* g_atom, const int num_atoms, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                           const size_t num_threads,
                           const int num_basis, const real_t* g_boys_grid)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, false, shell_s1.count); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const double p = a.exponent + b.exponent;

	const double3 P = make_double3((a.exponent*a.coordinate.x + b.exponent*b.coordinate.x)/p, (a.exponent*a.coordinate.y + b.exponent*b.coordinate.y)/p, (a.exponent*a.coordinate.z + b.exponent*b.coordinate.z)/p);

	double Boys[6];

	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 2, 3) * ((2*M_PI)/p)* exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double result[60] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

	for(int nuc=0; nuc<num_atoms; nuc++){
		getIncrementalBoys(5, p*calc_dist_GPU(P, g_atom[nuc].coordinate), g_boys_grid, Boys);
		result[0] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*Boys[0]*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - 2*(a.coordinate.x-b.coordinate.x)*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.75*a.exponent*p + 0.25*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 0.5*b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 0.75*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p) + p*(1.125*a.exponent - 0.375*b.exponent)) - 2*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 4*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.375*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.375*a.exponent - 0.125*b.exponent) + 0.625*p) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*p - (P.x-g_atom[nuc].coordinate.x)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))))/(p*p*p*p*p));
		result[1] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (P.y-g_atom[nuc].coordinate.y)*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)*(-2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(-3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.75*(a.coordinate.y-b.coordinate.y)*a.exponent*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.5*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*Boys[4] - Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(-1.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[2] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (P.z-g_atom[nuc].coordinate.z)*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)*(-2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(-3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.75*(a.coordinate.z-b.coordinate.z)*a.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*Boys[4] - Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(-1.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[3] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.x-b.coordinate.x)*Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(a.coordinate.x-b.coordinate.x)*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (p*p)*(-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) + (a.coordinate.x-b.coordinate.x)*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*p*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(2*(a.coordinate.x-b.coordinate.x)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p*p));
		result[4] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) + (a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.75*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*p + 1.5*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p) + 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + p*(-2*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 2.0*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p))/(p*p*p*p*p));
		result[5] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) + (a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.75*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*p + 1.5*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + p*(-2*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 2.0*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p))/(p*p*p*p*p));
		result[6] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.x-b.coordinate.x)*Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(a.coordinate.x-b.coordinate.x)*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (p*p)*(-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) + (a.coordinate.x-b.coordinate.x)*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(2*(a.coordinate.x-b.coordinate.x)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p*p));
		result[7] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*p*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[8] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2.0*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*p*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 0.5*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*Boys[4] - Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[9] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*p*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y))*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.x-b.coordinate.x)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - 2.0*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + Boys[4]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p*p));
		result[10] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)*(-2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(-3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.75*(a.coordinate.x-b.coordinate.x)*a.exponent*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*p*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(-1.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p*p));
		result[11] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*Boys[0]*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - 2*(a.coordinate.y-b.coordinate.y)*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.75*a.exponent*p + 0.25*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 0.5*b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 0.75*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p) + p*(1.125*a.exponent - 0.375*b.exponent)) - 2*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + 4*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.375*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.375*a.exponent - 0.125*b.exponent) + 0.625*p) + (p*p)*(4*(a.coordinate.y-b.coordinate.y)*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 2.0*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*p - (P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*p*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))))/(p*p*p*p*p));
		result[12] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (P.z-g_atom[nuc].coordinate.z)*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)*(-2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(-3.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.75*(a.coordinate.z-b.coordinate.z)*a.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*Boys[4] - Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(-1.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[13] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) + 0.25*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(-2*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 2.0*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p))/(p*p*p*p*p));
		result[14] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (a.coordinate.y-b.coordinate.y)*Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(a.coordinate.y-b.coordinate.y)*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (P.y-g_atom[nuc].coordinate.y)*p*(2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (p*p)*(-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) - (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.y-b.coordinate.y)*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.5*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*Boys[4] - Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(2*(a.coordinate.y-b.coordinate.y)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[15] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 2.0*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*p*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 0.5*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*Boys[4] - Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[16] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(a.exponent*a.exponent)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + (a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(-(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*p*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p));
		result[17] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.y-b.coordinate.y)*Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(a.coordinate.y-b.coordinate.y)*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*p*(2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (p*p)*(-4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) + (a.coordinate.y-b.coordinate.y)*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(2*(a.coordinate.y-b.coordinate.y)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[18] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) + (a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.75*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*p + 1.5*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + p*(-2*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 2.0*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p))/(p*p*p*p*p));
		result[19] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*p*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x))*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2.0*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[20] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)*(-2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(-3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.75*(a.coordinate.x-b.coordinate.x)*a.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(-1.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p*p));
		result[21] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)*(-2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(-3.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.75*(a.coordinate.y-b.coordinate.y)*a.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(-1.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[22] += g_atom[nuc].atomic_number * (((a.coordinate.z-b.coordinate.z)*Boys[0]*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) - 2*(a.coordinate.z-b.coordinate.z)*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.75*a.exponent*p + 0.25*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 0.5*b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 0.75*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p) + p*(1.125*a.exponent - 0.375*b.exponent)) - 2*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + 4*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.375*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.375*a.exponent - 0.125*b.exponent) + 0.625*p) + (p*p)*(4*(a.coordinate.z-b.coordinate.z)*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 2.0*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*p - (P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.z-g_atom[nuc].coordinate.z)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p));
		result[23] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(a.exponent*a.exponent)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + (a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(p*p)*((a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*p*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p));
		result[24] += g_atom[nuc].atomic_number * ((-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*p*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[25] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(a.coordinate.z-b.coordinate.z)*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (P.z-g_atom[nuc].coordinate.z)*p*(2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (p*p)*(-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) - (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.z-b.coordinate.z)*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*Boys[4] - Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(2*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[26] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) + 0.25*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(-2*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p))/(p*p*p*p*p));
		result[27] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) + 0.25*(P.y-g_atom[nuc].coordinate.y)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(-2*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p))/(p*p*p*p*p));
		result[28] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(a.coordinate.z-b.coordinate.z)*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (P.z-g_atom[nuc].coordinate.z)*p*(2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (p*p)*(-4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) - (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.z-b.coordinate.z)*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*Boys[4] - Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(2*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[29] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*(a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*p*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x))*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2.0*Boys[2]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) - 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[30] += g_atom[nuc].atomic_number * ((2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - (a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) - Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) - 4.0*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.75*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*p + 1.5*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p) + 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.75*p*(2*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 2.0*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p))/(p*p*p*p*p));
		result[31] += g_atom[nuc].atomic_number * ((2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - (a.coordinate.x-b.coordinate.x)*Boys[0]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 4.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.25*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + 0.75*p*(2*(a.coordinate.x-b.coordinate.x)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 2.0*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p))/(p*p*p*p*p));
		result[32] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(b.exponent*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*p*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 2.0*Boys[2]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x))*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + p*(-1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 1.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[33] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) - (a.coordinate.y-b.coordinate.y)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (P.y-g_atom[nuc].coordinate.y)*p*(2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (p*p)*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) - (a.coordinate.y-b.coordinate.y)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.5*Boys[3]*(P.y-g_atom[nuc].coordinate.y)*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*Boys[4] - Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(2*(a.coordinate.y-b.coordinate.y)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[34] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.x-b.coordinate.x)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + (p*p)*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) - (a.coordinate.x-b.coordinate.x)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*p*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(2*(a.coordinate.x-b.coordinate.x)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p));
		result[35] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.x-b.coordinate.x)*Boys[1]*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*((a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)) + (a.coordinate.x-b.coordinate.x)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(-(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) - 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + Boys[4]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p*p));
		result[36] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*p*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[37] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*Boys[0]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(p*p)*((a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*p*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p));
		result[38] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*((a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)) + (a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) - 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 2.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[39] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) + (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - Boys[2]*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) - 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*p*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 0.5*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*Boys[4] - Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[40] += g_atom[nuc].atomic_number * ((2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - (a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) - Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) - 4.0*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.75*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*p + 1.5*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.75*p*(2*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 2.0*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p))/(p*p*p*p*p));
		result[41] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(b.exponent*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*b.exponent*p*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 2.0*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x))*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + p*(-1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 1.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[42] += g_atom[nuc].atomic_number * ((2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - (a.coordinate.x-b.coordinate.x)*Boys[0]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 4.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.25*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + 0.75*p*(2*(a.coordinate.x-b.coordinate.x)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p))/(p*p*p*p*p));
		result[43] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + (a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + Boys[2]*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*p*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 0.5*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*Boys[4] - Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[44] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.x-b.coordinate.x)*Boys[1]*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(-(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)) + (a.coordinate.x-b.coordinate.x)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(p*p)*((a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) - 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + Boys[4]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p*p));
		result[45] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.x-b.coordinate.x)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + (p*p)*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) - (a.coordinate.x-b.coordinate.x)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(2*(a.coordinate.x-b.coordinate.x)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p));
		result[46] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (P.z-g_atom[nuc].coordinate.z)*p*(2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (p*p)*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) - (a.coordinate.z-b.coordinate.z)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*Boys[4] - Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(2*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[47] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*((a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y) - (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)) + (a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[48] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*Boys[0]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(-2.0*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*p*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p));
		result[49] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) + (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent)*((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*p*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[50] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(b.exponent*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*b.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)) + (a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 2.0*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)) - 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + p*(-1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 1.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + Boys[4]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)))/(p*p*p*p*p));
		result[51] += g_atom[nuc].atomic_number * ((2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - (a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) - Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-4*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) - 4.0*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.75*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*p + 1.5*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.75*p*(2*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 2.0*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p))/(p*p*p*p*p));
		result[52] += g_atom[nuc].atomic_number * ((2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - (a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(-4*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 4.0*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.25*(P.y-g_atom[nuc].coordinate.y)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + 0.75*p*(2*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p))/(p*p*p*p*p));
		result[53] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(-(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)) + (a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) - 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 2.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) + 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[54] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + (a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + Boys[2]*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) - 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*p*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 0.5*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*Boys[4] - Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)))/(p*p*p*p*p));
		result[55] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(-0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*p*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[56] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(-(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)) + (a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - 2.0*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[57] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (P.z-g_atom[nuc].coordinate.z)*p*(2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (p*p)*(2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) - 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) - (a.coordinate.z-b.coordinate.z)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*Boys[3]*(P.z-g_atom[nuc].coordinate.z)*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*Boys[4] - Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(2*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)))/(p*p*p*p*p));
		result[58] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.y-b.coordinate.y)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*p*(2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (p*p)*(2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) - (a.coordinate.y-b.coordinate.y)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) - 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(2*(a.coordinate.y-b.coordinate.y)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - 0.5*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p))/(p*p*p*p*p));
		result[59] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) + (a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) - Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(a.exponent - b.exponent)*((a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*(0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*p*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) - 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p));
	}

	atomicAdd(&g_nucattr[calc_result_index(i+0, j+0, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[0]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+1, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[1]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+2, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[2]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+3, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[3]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+4, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[4]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+5, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[5]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+6, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[6]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+7, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[7]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+8, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[8]);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+9, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[9]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+0, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[10]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+1, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[11]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+2, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[12]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+3, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[13]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+4, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[14]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+5, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[15]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+6, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[16]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+7, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[17]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+8, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[18]);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+9, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[19]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+0, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[20]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+1, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[21]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+2, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[22]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+3, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[23]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+4, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[24]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+5, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[25]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+6, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[26]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+7, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[27]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+8, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[28]);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+9, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[29]);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+0, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[30]);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+1, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[31]);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+2, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[32]);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+3, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[33]);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+4, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[34]);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+5, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[35]);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+6, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[36]);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+7, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[37]);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+8, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[38]);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+9, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[39]);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+0, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[40]);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+1, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[41]);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+2, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[42]);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+3, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[43]);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+4, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[44]);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+5, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[45]);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+6, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[46]);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+7, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[47]);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+8, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[48]);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+9, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[49]);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+0, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[50]);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+1, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[51]);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+2, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[52]);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+3, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[53]);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+4, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[54]);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+5, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[55]);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+6, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[56]);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+7, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[57]);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+8, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[58]);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+9, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[59]);
}


// ----- (f|f) kernel -----
__global__ 
void nuclear_attraction_MDff(real_t* g_nucattr, const PrimitiveShell *g_shell, const real_t* g_cgto_normalization_factors,  
                           const Atom* g_atom, const int num_atoms, const ShellTypeInfo shell_s0, const ShellTypeInfo shell_s1, 
                           const size_t num_threads,
                           const int num_basis, const real_t* g_boys_grid)
{
	const size_t id = threadIdx.x + blockIdx.x*blockDim.x;
	if(id >= num_threads) return;

	size_t2 ab = index1to2_one_electron(id, true); // Convert 1D index to 2D index a,b of [a|b]

	const size_t primitive_index_a = ab.y+shell_s0.start_index;
	const size_t primitive_index_b = ab.x+shell_s1.start_index;
	const PrimitiveShell a = g_shell[primitive_index_a];
	const PrimitiveShell b = g_shell[primitive_index_b];

	size_t i = a.basis_index; // Obtain basis index (i|j)
	size_t j = b.basis_index;

	const int val = ((i == j) && (ab.y != ab.x)) ? 2 : 1;

	const double p = a.exponent + b.exponent;

	const double3 P = make_double3((a.exponent*a.coordinate.x + b.exponent*b.coordinate.x)/p, (a.exponent*a.coordinate.y + b.exponent*b.coordinate.y)/p, (a.exponent*a.coordinate.z + b.exponent*b.coordinate.z)/p);

	double Boys[7];

	const double coefandNorm = a.coefficient * b.coefficient * calc_Norms(a.exponent, b.exponent, 3, 3) * ((2*M_PI)/p)* exp(-(a.exponent*b.exponent/p)*calc_dist_GPU(a.coordinate, b.coordinate));

	double result[100] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

	for(int nuc=0; nuc<num_atoms; nuc++){
		getIncrementalBoys(6, p*calc_dist_GPU(P, g_atom[nuc].coordinate), g_boys_grid, Boys);
		result[0] += g_atom[nuc].atomic_number * ((-((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[0]*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*p + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[0]*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[0]*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[0]*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*a.exponent*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*(a.exponent*a.exponent*a.exponent)*b.exponent*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p) + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*(a.exponent*a.exponent)*(b.exponent*b.exponent)*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p) - 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*a.exponent*(b.exponent*b.exponent*b.exponent)*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p) - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*(a.exponent*a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*(p*p) + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*(b.exponent*b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*(p*p) + 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*(a.exponent*a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*(p*p) - 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*a.exponent*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*(p*p) - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*(b.exponent*b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*(p*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[3]*(a.exponent*a.exponent*a.exponent)*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p) + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[3]*(a.exponent*a.exponent)*b.exponent*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p) - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[3]*a.exponent*(b.exponent*b.exponent)*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[3]*(b.exponent*b.exponent*b.exponent)*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p) + 2.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[0]*(a.exponent*a.exponent)*(p*p) - 6.75*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[0]*a.exponent*b.exponent*(p*p) + 2.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[0]*(b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*(a.exponent*a.exponent)*(p*p) + 13.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*a.exponent*b.exponent*(p*p) - 4.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[1]*(b.exponent*b.exponent)*(p*p) + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*(a.exponent*a.exponent)*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p) + 2.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*(a.exponent*a.exponent)*(p*p) - 27.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*a.exponent*b.exponent*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p) - 6.75*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*a.exponent*b.exponent*(p*p) + 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*(b.exponent*b.exponent)*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p) + 2.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[2]*(b.exponent*b.exponent)*(p*p) - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[3]*(a.exponent*a.exponent)*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p) + 27.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[3]*a.exponent*b.exponent*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p) - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[3]*(b.exponent*b.exponent)*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[4]*(a.exponent*a.exponent)*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p) - 9.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[4]*a.exponent*b.exponent*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p) + 3.0*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*Boys[4]*(b.exponent*b.exponent)*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p) - 11.25*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p*p) + 11.25*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p*p) + 22.5*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p*p) - 22.5*(a.coordinate.x-b.coordinate.x)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p*p) - 15.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*a.exponent*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p) - 11.25*(a.coordinate.x-b.coordinate.x)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p*p) + 15.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*b.exponent*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p) + 11.25*(a.coordinate.x-b.coordinate.x)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p*p) + 15.0*(a.coordinate.x-b.coordinate.x)*Boys[4]*a.exponent*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p) - 15.0*(a.coordinate.x-b.coordinate.x)*Boys[4]*b.exponent*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p) - 3.0*(a.coordinate.x-b.coordinate.x)*Boys[5]*a.exponent*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p*p) + 3.0*(a.coordinate.x-b.coordinate.x)*Boys[5]*b.exponent*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p*p) + 1.875*Boys[0]*(p*p*p) - 5.625*Boys[1]*(p*p*p) + 11.25*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p) + 5.625*Boys[2]*(p*p*p) - 22.5*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p) - 1.875*Boys[3]*(p*p*p) + 7.5*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p*p) + 11.25*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p) - 7.5*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p*p) + Boys[6]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(p*p*p*p*p*p))/(p*p*p*p*p*p));
		result[1] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 3.0*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 3.0*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p) + 2*Boys[1]*p*((a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)) + 4*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p) + (p*p)*(2.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.75*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.75*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[5] + 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)))/(p*p*p*p*p*p));
		result[2] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 3.0*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 3.0*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p) + 2*Boys[1]*p*((a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)) + 4*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p) + (p*p)*(2.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.75*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.75*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)))/(p*p*p*p*p*p));
		result[3] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(-2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) + 0.75*p) - Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(-0.125*a.exponent + 0.375*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 6*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-4*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(-0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)) + p*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - 2*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[4] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(-b.exponent*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(-b.exponent*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))) + (a.coordinate.x-b.coordinate.x)*p*(2*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 2.0*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(-0.25*a.exponent*p + 0.25*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + b.exponent*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.75*p*(-a.exponent + b.exponent) + p*(-0.5*a.exponent + 0.25*b.exponent)) + 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.75*p)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.75*p)) + (P.x-g_atom[nuc].coordinate.x)*(p*p)*(4*(a.coordinate.y-b.coordinate.y)*a.exponent*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 4.0*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.125*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-a.exponent + b.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.625*p) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 4.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(15*Boys[3] - 14*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 2.0*Boys[4]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + (P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[5] - 2*Boys[6]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))))/(p*p*p*p*p*p));
		result[5] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(-b.exponent*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(-b.exponent*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))) + (a.coordinate.x-b.coordinate.x)*p*(2*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 2.0*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(-0.25*a.exponent*p + 0.25*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + b.exponent*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.75*p*(-a.exponent + b.exponent) + p*(-0.5*a.exponent + 0.25*b.exponent)) + 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.75*p)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + 2*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.75*p)) + (P.x-g_atom[nuc].coordinate.x)*(p*p)*(4*(a.coordinate.z-b.coordinate.z)*a.exponent*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 4.0*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.125*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-a.exponent + b.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.625*p) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 4.0*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(15*Boys[3] - 14*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 2.0*Boys[4]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + (P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[5] - 2*Boys[6]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))))/(p*p*p*p*p*p));
		result[6] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(-2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)) + 4.0*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) + 0.75*p) - Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(-0.125*a.exponent + 0.375*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-4*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(-0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)) + p*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - 2*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[7] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(-(a.coordinate.x-b.coordinate.x)*Boys[0]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (P.x-g_atom[nuc].coordinate.x)*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)*(-2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(-3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.75*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.75*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) + (a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) - 4.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) - 1.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[8] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*(-(a.coordinate.x-b.coordinate.x)*Boys[0]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (P.x-g_atom[nuc].coordinate.x)*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)*(-2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(-3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.75*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.75*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) + (a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) - 4.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.75*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 1.5*p) + 1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 1.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[9] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y))*(0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)) + Boys[1]*a.exponent*p*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)) - Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.25*p)) + (p*p)*(-4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.125*a.exponent + 0.375*b.exponent) - 4.0*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.125*a.exponent + 0.375*b.exponent) - 0.25*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.75*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 1.5*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[5] - 2*Boys[6]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + 2.0*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + 2.0*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) + 0.75*p) - 2.0*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[10] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + 3.0*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p) - 3.0*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2*Boys[1]*p*(-(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p) + (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)) + 4*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + (p*p)*(2.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.75*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.75*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[5] + 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + 1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)))/(p*p*p*p*p*p));
		result[11] += g_atom[nuc].atomic_number * ((-((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[0]*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*p + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[0]*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[0]*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[0]*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*a.exponent*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*(a.exponent*a.exponent*a.exponent)*b.exponent*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p) + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*(a.exponent*a.exponent)*(b.exponent*b.exponent)*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p) - 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*a.exponent*(b.exponent*b.exponent*b.exponent)*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*(a.exponent*a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*(b.exponent*b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*(a.exponent*a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*(p*p) - 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*(a.exponent*a.exponent)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p) + 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*a.exponent*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*(p*p) - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*(b.exponent*b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*(p*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[3]*(a.exponent*a.exponent*a.exponent)*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p) + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[3]*(a.exponent*a.exponent)*b.exponent*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p) - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[3]*a.exponent*(b.exponent*b.exponent)*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[3]*(b.exponent*b.exponent*b.exponent)*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p) + 2.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[0]*(a.exponent*a.exponent)*(p*p) - 6.75*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[0]*a.exponent*b.exponent*(p*p) + 2.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[0]*(b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*(a.exponent*a.exponent)*(p*p) + 13.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*a.exponent*b.exponent*(p*p) - 4.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[1]*(b.exponent*b.exponent)*(p*p) + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*(a.exponent*a.exponent)*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p) + 2.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*(a.exponent*a.exponent)*(p*p) - 27.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*a.exponent*b.exponent*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p) - 6.75*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*a.exponent*b.exponent*(p*p) + 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*(b.exponent*b.exponent)*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p) + 2.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[2]*(b.exponent*b.exponent)*(p*p) - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[3]*(a.exponent*a.exponent)*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p) + 27.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[3]*a.exponent*b.exponent*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p) - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[3]*(b.exponent*b.exponent)*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[4]*(a.exponent*a.exponent)*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p) - 9.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[4]*a.exponent*b.exponent*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p) + 3.0*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*Boys[4]*(b.exponent*b.exponent)*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p) - 11.25*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p*p) + 11.25*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p*p) + 22.5*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p*p) - 22.5*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p*p) - 15.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p) - 11.25*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p*p) + 15.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*b.exponent*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p) + 11.25*(a.coordinate.y-b.coordinate.y)*Boys[3]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p*p) + 15.0*(a.coordinate.y-b.coordinate.y)*Boys[4]*a.exponent*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p) - 15.0*(a.coordinate.y-b.coordinate.y)*Boys[4]*b.exponent*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p) - 3.0*(a.coordinate.y-b.coordinate.y)*Boys[5]*a.exponent*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p*p) + 3.0*(a.coordinate.y-b.coordinate.y)*Boys[5]*b.exponent*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p*p) + 1.875*Boys[0]*(p*p*p) - 5.625*Boys[1]*(p*p*p) + 11.25*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p) + 5.625*Boys[2]*(p*p*p) - 22.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p) - 1.875*Boys[3]*(p*p*p) + 7.5*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p*p) + 11.25*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p) - 7.5*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p*p) + Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*(p*p*p*p*p*p))/(p*p*p*p*p*p));
		result[12] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 3.0*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 3.0*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p) + 2*Boys[1]*p*((a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)) + 4*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - (P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - (P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p) + (p*p)*(2.25*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.75*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.75*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)))/(p*p*p*p*p*p));
		result[13] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(-b.exponent*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.75*p)) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(-b.exponent*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + (a.coordinate.y-b.coordinate.y)*p*(2*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 2.0*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(-0.25*a.exponent*p + 0.25*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + b.exponent*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.75*p*(-a.exponent + b.exponent) + p*(-0.5*a.exponent + 0.25*b.exponent)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.75*p)) + (P.y-g_atom[nuc].coordinate.y)*(p*p)*(4*(a.coordinate.x-b.coordinate.x)*a.exponent*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 4.0*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.125*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-a.exponent + b.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.625*p) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(15*Boys[3] - 14*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 4.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(15*Boys[4] - 14*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))))/(p*p*p*p*p*p));
		result[14] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)) + 4.0*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + (a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(-2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(-0.125*a.exponent + 0.375*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(-4*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(-0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)) + p*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - 2*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(-0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[15] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p) - (a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p)*(-2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(-3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.75*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.75*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(-1.5*Boys[5] + Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + p*(-4.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + 1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 1.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[16] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*(-(a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (P.y-g_atom[nuc].coordinate.y)*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p)*(-2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(-3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.75*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 3.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.75*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) + (a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) - 4.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.75*p)) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 1.5*p) - 1.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[17] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(-2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)) + 4.0*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) + 0.75*p) - Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(-0.125*a.exponent + 0.375*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-4*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(-0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)) + p*(4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - 2*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[18] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(-b.exponent*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(-b.exponent*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + (a.coordinate.y-b.coordinate.y)*p*(2*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 2.0*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(-0.25*a.exponent*p + 0.25*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + b.exponent*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.75*p*(-a.exponent + b.exponent) + p*(-0.5*a.exponent + 0.25*b.exponent)) + 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.75*p)) - 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + 2*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.75*p)) + (P.y-g_atom[nuc].coordinate.y)*(p*p)*(4*(a.coordinate.z-b.coordinate.z)*a.exponent*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 4.0*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.125*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-a.exponent + b.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.625*p) + (p*p)*(4*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 4.0*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(15*Boys[3] - 14*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 2.0*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + (P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))))/(p*p*p*p*p*p));
		result[19] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*a.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x))*(0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) + Boys[1]*a.exponent*p*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)) - Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.25*p)) + (p*p)*(-4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.125*a.exponent + 0.375*b.exponent) - 0.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.125*a.exponent + 0.375*b.exponent) - 4.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + 2.0*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) + 0.75*p) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) + 0.75*p) - 2.0*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[20] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + 3.0*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) - 3.0*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + 2*Boys[1]*p*(-(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)) + 4*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) + (p*p)*(2.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.75*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.75*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + 1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)))/(p*p*p*p*p*p));
		result[21] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + 3.0*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) - 3.0*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 2*Boys[1]*p*(-(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)) + 4*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) - (P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) - (P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + (p*p)*(2.25*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.75*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.75*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + 1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)))/(p*p*p*p*p*p));
		result[22] += g_atom[nuc].atomic_number * ((-((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[0]*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*(a.exponent*a.exponent*a.exponent)*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*p + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*(a.exponent*a.exponent)*(b.exponent*b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[0]*(a.exponent*a.exponent*a.exponent)*b.exponent*p + 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[0]*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[0]*a.exponent*(b.exponent*b.exponent*b.exponent)*p + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*(a.exponent*a.exponent*a.exponent)*b.exponent*p - 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*(a.exponent*a.exponent)*(b.exponent*b.exponent)*p + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*a.exponent*(b.exponent*b.exponent*b.exponent)*p - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*(a.exponent*a.exponent*a.exponent)*b.exponent*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*(a.exponent*a.exponent)*(b.exponent*b.exponent)*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) - 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*a.exponent*(b.exponent*b.exponent*b.exponent)*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*(a.exponent*a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*(b.exponent*b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*(a.exponent*a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*(a.exponent*a.exponent)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p) + 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*a.exponent*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*(b.exponent*b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[3]*(a.exponent*a.exponent*a.exponent)*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p) + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[3]*(a.exponent*a.exponent)*b.exponent*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p) - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[3]*a.exponent*(b.exponent*b.exponent)*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[3]*(b.exponent*b.exponent*b.exponent)*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p) + 2.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[0]*(a.exponent*a.exponent)*(p*p) - 6.75*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[0]*a.exponent*b.exponent*(p*p) + 2.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[0]*(b.exponent*b.exponent)*(p*p) - 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*(a.exponent*a.exponent)*(p*p) + 13.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*a.exponent*b.exponent*(p*p) - 4.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[1]*(b.exponent*b.exponent)*(p*p) + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*(a.exponent*a.exponent)*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p) + 2.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*(a.exponent*a.exponent)*(p*p) - 27.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*a.exponent*b.exponent*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p) - 6.75*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*a.exponent*b.exponent*(p*p) + 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*(b.exponent*b.exponent)*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p) + 2.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[2]*(b.exponent*b.exponent)*(p*p) - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[3]*(a.exponent*a.exponent)*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p) + 27.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[3]*a.exponent*b.exponent*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p) - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[3]*(b.exponent*b.exponent)*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[4]*(a.exponent*a.exponent)*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p) - 9.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[4]*a.exponent*b.exponent*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p) + 3.0*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*Boys[4]*(b.exponent*b.exponent)*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p) - 11.25*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + 11.25*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + 22.5*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) - 22.5*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) - 15.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p) - 11.25*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + 15.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*b.exponent*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p) + 11.25*(a.coordinate.z-b.coordinate.z)*Boys[3]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) + 15.0*(a.coordinate.z-b.coordinate.z)*Boys[4]*a.exponent*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p) - 15.0*(a.coordinate.z-b.coordinate.z)*Boys[4]*b.exponent*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p) - 3.0*(a.coordinate.z-b.coordinate.z)*Boys[5]*a.exponent*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p*p) + 3.0*(a.coordinate.z-b.coordinate.z)*Boys[5]*b.exponent*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p*p) + 1.875*Boys[0]*(p*p*p) - 5.625*Boys[1]*(p*p*p) + 11.25*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p) + 5.625*Boys[2]*(p*p*p) - 22.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p) - 1.875*Boys[3]*(p*p*p) + 7.5*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p*p) + 11.25*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p) - 7.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p*p) + Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*(p*p*p*p*p*p))/(p*p*p*p*p*p));
		result[23] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*(4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) + (P.z-g_atom[nuc].coordinate.z)*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p)*(-2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(-3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.75*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 3.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.75*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) - 4.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) - 1.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[24] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) + (P.z-g_atom[nuc].coordinate.z)*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p)*(-2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(-3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.75*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.75*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(-4.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.75*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 1.5*p) + 1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 1.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[25] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)) + 4.0*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + (a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(-2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(-0.125*a.exponent + 0.375*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(-4*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(-0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)) + p*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - 2*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(-0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[26] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(-b.exponent*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.75*p)) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(-b.exponent*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + (a.coordinate.z-b.coordinate.z)*p*(2*(a.coordinate.x-b.coordinate.x)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(-0.25*a.exponent*p + 0.25*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + b.exponent*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.75*p*(-a.exponent + b.exponent) + p*(-0.5*a.exponent + 0.25*b.exponent)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.75*p)) + (P.z-g_atom[nuc].coordinate.z)*(p*p)*(4*(a.coordinate.x-b.coordinate.x)*a.exponent*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 4.0*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.125*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-a.exponent + b.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.625*p) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(15*Boys[3] - 14*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 4.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(15*Boys[4] - 14*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p*p));
		result[27] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(-b.exponent*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.75*p)) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(-b.exponent*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(a.exponent - 0.5*b.exponent) + 0.5*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + (a.coordinate.z-b.coordinate.z)*p*(2*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 2.0*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(-0.25*a.exponent*p + 0.25*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + b.exponent*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.75*p*(-a.exponent + b.exponent) + p*(-0.5*a.exponent + 0.25*b.exponent)) - 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + 2*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(0.5*a.exponent - 0.25*b.exponent) + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - (p*p) - p*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.125*p) + p*(-0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.75*p)) + (P.z-g_atom[nuc].coordinate.z)*(p*p)*(4*(a.coordinate.y-b.coordinate.y)*a.exponent*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 4.0*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.125*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-a.exponent + b.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.625*p) + (p*p)*(4*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(15*Boys[3] - 14*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 4.0*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(-0.125*a.exponent + 0.1875*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(15*Boys[4] - 14*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p*p));
		result[28] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + (a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(-2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(-0.125*a.exponent + 0.375*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-4*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(-0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)) + p*(4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - 2*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[29] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*(a.exponent*a.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x))*(0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) + Boys[1]*a.exponent*p*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)) - Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*p*(a.exponent - b.exponent) + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.25*p)) + (p*p)*(-4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(a.exponent*a.exponent)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.125*a.exponent + 0.375*b.exponent) - 0.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.125*a.exponent + 0.375*b.exponent) + 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 4.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.125*a.exponent + 0.375*b.exponent) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.exponent*a.exponent)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + 2.0*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) + 0.75*p) + 2.0*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) + 0.75*p) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + p*(0.5*a.exponent - b.exponent) + 0.25*p*(a.exponent - b.exponent)) - 2.0*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(-0.25*a.exponent + 0.5*b.exponent) - 0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[30] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(-2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) - 3.0*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p) + Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(0.375*a.exponent - 0.125*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 6*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(4*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.75*(p*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p) - 0.5*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) - p*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 1.5*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p)))/(p*p*p*p*p*p));
		result[31] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + (a.coordinate.y-b.coordinate.y)*p*(2*(a.coordinate.x-b.coordinate.x)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 2.0*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.75*a.exponent*p + 0.25*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 0.5*b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 0.75*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p) + p*(1.125*a.exponent - 0.375*b.exponent)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - (P.y-g_atom[nuc].coordinate.y)*(p*p)*(4*(a.coordinate.x-b.coordinate.x)*b.exponent*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 4.0*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.375*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.375*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.375*a.exponent - 0.125*b.exponent) + 0.625*p) + (p*p)*(-4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(15*Boys[3] - 14*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 4.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(15*Boys[4] - 14*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))))/(p*p*p*p*p*p));
		result[32] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*(4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + (P.z-g_atom[nuc].coordinate.z)*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)*(2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.x-b.coordinate.x)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.75*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 3.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.75*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 1.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[33] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + (a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*((-a.exponent + b.exponent)*(-a.exponent + b.exponent)) + 0.25*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(-a.exponent + b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*((a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) - 0.75*Boys[2] + 1.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 2*p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[34] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - 4*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + 2*Boys[1]*p*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)) - 4*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*a.exponent - 0.25*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(-0.25*a.exponent + 0.5*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[5] + 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))))/(p*p*p*p*p*p));
		result[35] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.z-b.coordinate.z)*a.exponent*((a.coordinate.x-b.coordinate.x)*Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)*(-2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[36] += g_atom[nuc].atomic_number * ((4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + Boys[2]*(p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + (p*p*p)*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.125*Boys[3] + 0.25*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-0.5*Boys[5] + Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*p*(-(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*(-(a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - 0.25*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p*p));
		result[37] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.x-b.coordinate.x)*b.exponent*(-(a.coordinate.y-b.coordinate.y)*Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) - (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[38] += g_atom[nuc].atomic_number * ((2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + Boys[1]*p*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) - Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) - (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) + 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + 2.0*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[39] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.z-b.coordinate.z)*a.exponent*(2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (a.coordinate.y-b.coordinate.y)*Boys[0]*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.z-b.coordinate.z)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(-1.5*Boys[5] + Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[40] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + (a.coordinate.x-b.coordinate.x)*p*(2*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 2.0*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.75*a.exponent*p + 0.25*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 0.5*b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 0.75*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p) + p*(1.125*a.exponent - 0.375*b.exponent)) + 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - (P.x-g_atom[nuc].coordinate.x)*(p*p)*(4*(a.coordinate.y-b.coordinate.y)*b.exponent*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 4.0*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.375*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.375*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.375*a.exponent - 0.125*b.exponent) + 0.625*p) + (p*p)*(-4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 4.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(15*Boys[3] - 14*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 2.0*Boys[4]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p) + (P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[5] - 2*Boys[6]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))))/(p*p*p*p*p*p));
		result[41] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) - 3.0*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p) + (a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(-2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 2.0*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(0.375*a.exponent - 0.125*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(4*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.75*(p*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p) - 0.5*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) - p*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + 1.5*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p)))/(p*p*p*p*p*p));
		result[42] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.y-b.coordinate.y)*b.exponent*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + (P.z-g_atom[nuc].coordinate.z)*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)*(2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.y-b.coordinate.y)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.75*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.75*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + 1.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[43] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) - 4*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + 2*Boys[1]*p*(-(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) - 4*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(-0.25*a.exponent + 0.5*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*a.exponent - 0.25*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[5] + 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p));
		result[44] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*((-a.exponent + b.exponent)*(-a.exponent + b.exponent)) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(-a.exponent + b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 6*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) - 0.75*Boys[2] + 1.5*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + 2*p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[45] += g_atom[nuc].atomic_number * ((2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(-(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + Boys[1]*p*(-(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) - Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) - (a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) + 0.25*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.75*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 1.5*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[5] - 2*Boys[6]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 2.0*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[46] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.y-b.coordinate.y)*b.exponent*(-(a.coordinate.x-b.coordinate.x)*Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) - (a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[47] += g_atom[nuc].atomic_number * ((4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + Boys[2]*(p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) + (p*p*p)*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.25*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.125*Boys[3] + 0.25*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-0.5*Boys[5] + Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - 0.25*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p*p));
		result[48] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.z-b.coordinate.z)*a.exponent*(-4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.y-b.coordinate.y)*Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p)*(-2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.z-b.coordinate.z)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(-1.5*Boys[5] + Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + p*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) - 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[49] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.z-b.coordinate.z)*a.exponent*((a.coordinate.x-b.coordinate.x)*Boys[0]*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.z-b.coordinate.z)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) - 0.25*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[50] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p))) + (a.coordinate.x-b.coordinate.x)*p*(2*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 2.0*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.75*a.exponent*p + 0.25*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - 0.5*b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p) - 0.75*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p) + p*(1.125*a.exponent - 0.375*b.exponent)) + 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - (P.x-g_atom[nuc].coordinate.x)*(p*p)*(4*(a.coordinate.z-b.coordinate.z)*b.exponent*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 4.0*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.375*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.375*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.375*a.exponent - 0.125*b.exponent) + 0.625*p) + (p*p)*(-4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 4.0*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(15*Boys[3] - 14*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 2.0*Boys[4]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + (P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[5] - 2*Boys[6]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))))/(p*p*p*p*p*p));
		result[51] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.z-b.coordinate.z)*b.exponent*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - (a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)*(2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.z-b.coordinate.z)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.75*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.75*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(-1.5*Boys[5] + Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + p*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + 1.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[52] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) - 3.0*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p) + (a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(-2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 2.0*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(0.375*a.exponent - 0.125*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(4*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.75*(p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p) - 0.5*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) - p*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + 1.5*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p)))/(p*p*p*p*p*p));
		result[53] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.z-b.coordinate.z)*b.exponent*(-(a.coordinate.x-b.coordinate.x)*Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.z-b.coordinate.z)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 4.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[54] += g_atom[nuc].atomic_number * ((2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(p*p)*((a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + Boys[1]*p*((a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) - Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) - (a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) + 0.25*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.75*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 1.5*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[5] - 2*Boys[6]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 2.0*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[55] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*((-a.exponent + b.exponent)*(-a.exponent + b.exponent)) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(-a.exponent + b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-a.exponent + b.exponent) - 0.75*Boys[2] + 1.5*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*p + ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + 2*p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(0.25*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[56] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - 4*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + 2*Boys[1]*p*(-(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) - 4*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(-0.25*a.exponent + 0.5*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*a.exponent - 0.25*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p));
		result[57] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.y-b.coordinate.y)*a.exponent*(-4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p)*(-2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[58] += g_atom[nuc].atomic_number * ((4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + Boys[2]*(p*p)*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)) + (p*p*p)*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.125*Boys[3] + 0.25*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-0.5*Boys[5] + Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.x-b.coordinate.x)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p) - 0.25*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(b.exponent*b.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))))/(p*p*p*p*p*p));
		result[59] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.y-b.coordinate.y)*a.exponent*((a.coordinate.x-b.coordinate.x)*Boys[0]*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.y-b.coordinate.y)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) - (a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[60] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(-2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) - 3.0*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p) + Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(0.375*a.exponent - 0.125*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(4*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.75*(p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p) - 0.5*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) - p*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 1.5*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p)))/(p*p*p*p*p*p));
		result[61] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*(-(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (P.y-g_atom[nuc].coordinate.y)*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)*(2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.x-b.coordinate.x)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.75*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 3.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.75*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 1.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[62] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + (a.coordinate.z-b.coordinate.z)*p*(2*(a.coordinate.x-b.coordinate.x)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.75*a.exponent*p + 0.25*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 0.5*b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 0.75*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p) + p*(1.125*a.exponent - 0.375*b.exponent)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - (P.z-g_atom[nuc].coordinate.z)*(p*p)*(4*(a.coordinate.x-b.coordinate.x)*b.exponent*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 4.0*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.375*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.375*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.375*a.exponent - 0.125*b.exponent) + 0.625*p) + (p*p)*(-4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(15*Boys[3] - 14*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 4.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(15*Boys[4] - 14*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p*p));
		result[63] += g_atom[nuc].atomic_number * ((4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + Boys[2]*(p*p)*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + (p*p*p)*(-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.125*Boys[3] + 0.25*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-0.5*Boys[5] + Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*p*(-(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + p*(-(a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - 0.25*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p*p));
		result[64] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.y-b.coordinate.y)*a.exponent*((a.coordinate.x-b.coordinate.x)*Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)*(-2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent) + (a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[65] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - 4*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + 2*Boys[1]*p*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)) - 4*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*a.exponent - 0.25*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(-0.25*a.exponent + 0.5*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))))/(p*p*p*p*p*p));
		result[66] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + (a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(2*Boys[1]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(-(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*((-a.exponent + b.exponent)*(-a.exponent + b.exponent)) + 0.25*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(-a.exponent + b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*((a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) - 0.75*Boys[2] + 1.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 2*p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[67] += g_atom[nuc].atomic_number * ((2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + Boys[1]*p*(-(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) - Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) - 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) + 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 2.0*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - 2.0*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[68] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.x-b.coordinate.x)*b.exponent*(4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) + (a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 4.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[69] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.y-b.coordinate.y)*a.exponent*(2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.y-b.coordinate.y)*Boys[1]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.y-b.coordinate.y)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[70] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.y-b.coordinate.y)*b.exponent*(-(a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (P.x-g_atom[nuc].coordinate.x)*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)*(2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.y-b.coordinate.y)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.75*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.75*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 1.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[71] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(-2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) - 3.0*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p) + Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) - 2.0*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(0.375*a.exponent - 0.125*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(4*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.75*(p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p) - 0.5*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) - p*(4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + 1.5*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p)))/(p*p*p*p*p*p));
		result[72] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + 2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p))) + (a.coordinate.z-b.coordinate.z)*p*(2*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 2.0*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.75*a.exponent*p + 0.25*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - 0.5*b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p) - 0.75*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p) + p*(1.125*a.exponent - 0.375*b.exponent)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) - (P.z-g_atom[nuc].coordinate.z)*(p*p)*(4*(a.coordinate.y-b.coordinate.y)*b.exponent*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 4.0*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.375*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.375*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.375*a.exponent - 0.125*b.exponent) + 0.625*p) + (p*p)*(-4*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(15*Boys[3] - 14*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 4.0*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(15*Boys[4] - 14*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p*p));
		result[73] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.x-b.coordinate.x)*a.exponent*((a.coordinate.y-b.coordinate.y)*Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 4.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p)*(-2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 4.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p)) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[74] += g_atom[nuc].atomic_number * ((4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + Boys[2]*(p*p)*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p*p)*(-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.25*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.125*Boys[3] + 0.25*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-0.5*Boys[5] + Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.25*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(b.exponent*b.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))))/(p*p*p*p*p*p));
		result[75] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.y-b.coordinate.y)*b.exponent*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) - 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.y-b.coordinate.y)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent) + (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[76] += g_atom[nuc].atomic_number * ((2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + Boys[1]*p*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) - Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) - 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 2.0*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - 2.0*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[77] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + (a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*((-a.exponent + b.exponent)*(-a.exponent + b.exponent)) + 0.25*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(-a.exponent + b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*((a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-a.exponent + b.exponent) - 0.75*Boys[2] + 1.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*p + ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + 2*p*((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(0.25*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[78] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - 4*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + 2*Boys[1]*p*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p)) - 4*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (p*p)*(4*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*a.exponent - 0.25*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(-0.25*a.exponent + 0.5*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(-2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))))/(p*p*p*p*p*p));
		result[79] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.x-b.coordinate.x)*a.exponent*(2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.x-b.coordinate.x)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) - (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[80] += g_atom[nuc].atomic_number * ((-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + (a.coordinate.z-b.coordinate.z)*b.exponent*(-(a.coordinate.x-b.coordinate.x)*Boys[0]*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + (P.x-g_atom[nuc].coordinate.x)*p*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)*(2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - (a.coordinate.z-b.coordinate.z)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 3.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.75*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.75*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - (a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 4.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 1.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[81] += g_atom[nuc].atomic_number * ((-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*b.exponent*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*a.exponent*(p*p) + 0.5*a.exponent*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p))) + (a.coordinate.y-b.coordinate.y)*p*(2*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 2.0*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.75*a.exponent*p + 0.25*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - 0.5*b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p) - 0.75*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p) + p*(1.125*a.exponent - 0.375*b.exponent)) + 2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - 1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + (p*p) + p*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.125*p) + p*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) - (P.y-g_atom[nuc].coordinate.y)*(p*p)*(4*(a.coordinate.z-b.coordinate.z)*b.exponent*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 4.0*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(0.375*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.375*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.375*a.exponent - 0.125*b.exponent) + 0.625*p) + (p*p)*(-4*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 4.0*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(-0.1875*a.exponent + 0.125*b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(15*Boys[3] - 14*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 2.0*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + (P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))))/(p*p*p*p*p*p));
		result[82] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) - 3.0*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p) + (a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(-2*Boys[1]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(8.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 2.0*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(0.375*a.exponent - 0.125*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(4*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) + 0.75*Boys[2] - 1.5*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 0.5*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.75*(p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p) - 0.5*p*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) - p*(4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + 1.5*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p)))/(p*p*p*p*p*p));
		result[83] += g_atom[nuc].atomic_number * ((2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + Boys[1]*p*((a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z) - (a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) - Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) - (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) - 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 2.0*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) - 2.0*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) - 2.0*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[84] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.z-b.coordinate.z)*b.exponent*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (a.coordinate.y-b.coordinate.y)*Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) - 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) + (a.coordinate.z-b.coordinate.z)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(-1.5*Boys[5] + Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + p*(4.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))) + p*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[85] += g_atom[nuc].atomic_number * ((4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(a.exponent - b.exponent) - Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + Boys[2]*(p*p)*(4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (p*p*p)*(2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) - 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.125*Boys[3] + 0.25*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-0.5*Boys[5] + Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)) + p*(2.0*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p) - 0.25*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))))/(p*p*p*p*p*p));
		result[86] += g_atom[nuc].atomic_number * ((2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.x-b.coordinate.x)*a.exponent*(-4.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p)*(-2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + (a.coordinate.x-b.coordinate.x)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(-4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent) - (a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p) - 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(b.exponent*b.exponent) + 0.5*p)))/(p*p*p*p*p*p));
		result[87] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - 4*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - 4*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + 2*Boys[1]*p*(-(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) - 4*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) - (P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (p*p)*(4*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(-0.25*a.exponent + 0.5*b.exponent)*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(-0.25*a.exponent + 0.5*b.exponent)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*a.exponent - 0.25*b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))))/(p*p*p*p*p*p));
		result[88] += g_atom[nuc].atomic_number * (((a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(2*Boys[1]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 2.0*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + Boys[0]*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p*p)*(-(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*((-a.exponent + b.exponent)*(-a.exponent + b.exponent)) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(-a.exponent + b.exponent)*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.375*Boys[3] + 0.75*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.75*Boys[4] - 1.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + (p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*((a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-a.exponent + b.exponent) - 0.75*Boys[2] + 1.5*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 0.5*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - (p*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p) + 0.5*p*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*p + ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 0.5*(p*p) - p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + 2*p*((a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(0.5*a.exponent*p - 0.5*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p) - b.exponent*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + p*(a.exponent - 0.5*b.exponent)) + (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(0.25*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(0.5*a.exponent - 0.25*b.exponent) + 0.75*p)))/(p*p*p*p*p*p));
		result[89] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*a.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) - (a.coordinate.x-b.coordinate.x)*a.exponent*((a.coordinate.y-b.coordinate.y)*Boys[0]*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) + 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p) + (P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p)*(-2*(a.coordinate.x-b.coordinate.x)*Boys[1]*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.x-b.coordinate.x)*a.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) - 0.25*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(a.exponent - b.exponent) - (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(-0.25*a.exponent + 0.5*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*b.exponent*(a.exponent - b.exponent) - 0.75*p)) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*a.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*a.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*p*(a.exponent - b.exponent)) + 2.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(-0.25*a.exponent + 0.5*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[90] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) - 2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(p*p)*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y))*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(b.exponent*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + Boys[1]*b.exponent*p*((a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent)*p - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(P.x-g_atom[nuc].coordinate.x)*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) + 4.0*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.375*a.exponent - 0.125*b.exponent) - 0.25*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-3*Boys[3] + 6*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + 0.75*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) - 1.5*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p) - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[5] - 2*Boys[6]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) - p*(2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.75*p)) + 1.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p) + 1.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p) + 1.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p) + 1.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + p)))/(p*p*p*p*p*p));
		result[91] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[0]*(b.exponent*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x))*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + Boys[1]*b.exponent*p*((a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent)*p - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(P.y-g_atom[nuc].coordinate.y)*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) - 0.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) + 4.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.375*a.exponent - 0.125*b.exponent) - 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(3*Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) - p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p) + 1.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p) + 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.75*p)) + 1.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p) + 1.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + p)))/(p*p*p*p*p*p));
		result[92] += g_atom[nuc].atomic_number * ((-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*p*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[0]*(b.exponent*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(p*p)*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x))*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + Boys[1]*b.exponent*p*((a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent)*p - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) + 0.5*(p*p) + p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.25*p)) + (p*p)*(4*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(b.exponent*b.exponent)*(P.z-g_atom[nuc].coordinate.z)*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) - 0.25*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(-3*Boys[2] + 6*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 4.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) - 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 4.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) - 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(-3*Boys[3] + 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 4.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.375*a.exponent - 0.125*b.exponent) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-3*Boys[4] + 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) - p*(1.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(b.exponent*b.exponent)*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p) + 1.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p) + 1.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p) + 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(1.5*a.exponent*p + 0.5*a.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 1.5*p) - b.exponent*(1.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.75*p)) + 1.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + p)))/(p*p*p*p*p*p));
		result[93] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.z-b.coordinate.z)*b.exponent*(-2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.y-b.coordinate.y)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) - 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) - (P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p)*(2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*Boys[4]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p) + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(-1.5*Boys[5] + Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[94] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.z-b.coordinate.z)*b.exponent*((a.coordinate.x-b.coordinate.x)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)*(2*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.z-b.coordinate.z)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.25*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 2.0*(a.coordinate.x-b.coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[95] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.y-b.coordinate.y)*b.exponent*((a.coordinate.x-b.coordinate.x)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p) - (P.x-g_atom[nuc].coordinate.x)*p*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)*(2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) - 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(-Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.x-b.coordinate.x)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) - ((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent + 0.75*p)) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*(a.exponent*a.exponent) + 0.5*p)) - 2.0*(a.coordinate.x-b.coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(3*Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[96] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.x-g_atom[nuc].coordinate.x)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.y-b.coordinate.y)*b.exponent*(-2.0*(a.coordinate.x-b.coordinate.x)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) - 2.0*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - (P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p)*(2*(a.coordinate.y-b.coordinate.y)*Boys[1]*b.exponent*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p) + (P.y-g_atom[nuc].coordinate.y)*(p*p)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) - 2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*(3*Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + 0.25*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + p*(-2.0*(a.coordinate.x-b.coordinate.x)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + p*((a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 2*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - 2.0*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[97] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.x-b.coordinate.x)*b.exponent*(-2.0*(a.coordinate.y-b.coordinate.y)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) - (P.z-g_atom[nuc].coordinate.z)*p*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p)*(2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p) + (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[4] + 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent) + (a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-3*Boys[5] + 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 2.0*(a.coordinate.y-b.coordinate.y)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) - ((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent + 0.75*p) + (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p))) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*(a.exponent*a.exponent) + 0.5*p)) - 2.0*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[98] += g_atom[nuc].atomic_number * (((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[1]*b.exponent*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.x-b.coordinate.x)*b.exponent*((a.coordinate.y-b.coordinate.y)*Boys[0]*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p)) - 2.0*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p) - (P.y-g_atom[nuc].coordinate.y)*p*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p)*(2*(a.coordinate.x-b.coordinate.x)*Boys[1]*b.exponent*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.x-b.coordinate.x)*b.exponent*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p) + (P.x-g_atom[nuc].coordinate.x)*(p*p)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + (p*p)*(-2.0*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.z-g_atom[nuc].coordinate.z)*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*p*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.25*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[3] - 6*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 2.0*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(a.exponent - b.exponent) + (a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(0.5*a.exponent - 0.25*b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.5*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(3*Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent) + 0.25*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[4] - 6*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p - 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[5] - 2*Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p))) + p*(0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) + (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p))*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 2.0*(a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p)*(a.exponent - b.exponent)*(0.5*((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) - ((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent + 0.75*p)) + p*(-2*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*b.exponent*(Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(a.coordinate.x-b.coordinate.x)*b.exponent*(P.y-g_atom[nuc].coordinate.y)*p*(3*Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[2]*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*p*(a.exponent - b.exponent)*(a.exponent*p - b.exponent*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*(a.exponent*a.exponent) + 0.5*p)) - 2.0*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(0.5*a.exponent - 0.25*b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + 0.5*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(p*p)*(3*Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)))/(p*p*p*p*p*p));
		result[99] += g_atom[nuc].atomic_number * ((-(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*Boys[3]*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(p*p*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)*(a.exponent - b.exponent)) - Boys[0]*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - Boys[2]*(p*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent))*((a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) + (a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)) + (p*p*p)*(-0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.y-b.coordinate.y)*(P.x-g_atom[nuc].coordinate.x)*(P.y-g_atom[nuc].coordinate.y)*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) - 0.5*(a.coordinate.x-b.coordinate.x)*(a.coordinate.z-b.coordinate.z)*(P.x-g_atom[nuc].coordinate.x)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) + 0.25*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*(a.coordinate.y-b.coordinate.y)*(a.coordinate.z-b.coordinate.z)*(P.y-g_atom[nuc].coordinate.y)*(P.z-g_atom[nuc].coordinate.z)*(Boys[3] - 2*Boys[4]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*((a.exponent - b.exponent)*(a.exponent - b.exponent)) + 0.25*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(-Boys[3] + 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(-Boys[3] + 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[4] - 2*Boys[5]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)) - 0.125*Boys[3] + 0.25*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(-0.5*Boys[5] + Boys[6]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + ((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(0.25*Boys[4] - 0.5*Boys[5]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) - 0.5*p*((Boys[1] - 2*Boys[2]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (Boys[1] - 2*Boys[2]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) + (Boys[1] - 2*Boys[2]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)) + p*(-(a.coordinate.x-b.coordinate.x)*Boys[1]*(P.x-g_atom[nuc].coordinate.x)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.x-b.coordinate.x)*(P.x-g_atom[nuc].coordinate.x)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.y-b.coordinate.y)*Boys[1]*(P.y-g_atom[nuc].coordinate.y)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent)*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.y-b.coordinate.y)*(P.y-g_atom[nuc].coordinate.y)*p*(Boys[2] - 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) - (a.coordinate.z-b.coordinate.z)*Boys[1]*(P.z-g_atom[nuc].coordinate.z)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p)*(a.exponent - b.exponent)*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p) - 0.5*(a.coordinate.z-b.coordinate.z)*(P.z-g_atom[nuc].coordinate.z)*p*(Boys[2] - 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p)*(a.exponent - b.exponent)*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p) + 0.25*p*(((a.coordinate.x-b.coordinate.x)*(a.coordinate.x-b.coordinate.x))*a.exponent*b.exponent - 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*p*(((a.coordinate.y-b.coordinate.y)*(a.coordinate.y-b.coordinate.y))*a.exponent*b.exponent - 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.z-g_atom[nuc].coordinate.z)*(P.z-g_atom[nuc].coordinate.z))*p)) + 0.25*p*(((a.coordinate.z-b.coordinate.z)*(a.coordinate.z-b.coordinate.z))*a.exponent*b.exponent - 0.5*p)*(-Boys[2] + 2*Boys[3]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p + 2*((P.x-g_atom[nuc].coordinate.x)*(P.x-g_atom[nuc].coordinate.x))*p*(Boys[3] - 2*Boys[4]*((P.y-g_atom[nuc].coordinate.y)*(P.y-g_atom[nuc].coordinate.y))*p))))/(p*p*p*p*p*p));
	}

	atomicAdd(&g_nucattr[calc_result_index(i+0, j+0, num_basis)], -0.06666666666666667 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[0]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+1, num_basis)], -0.06666666666666667 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[1]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+2, num_basis)], -0.06666666666666667 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[2]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+3, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[3]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+4, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[4]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+5, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[5]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+6, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[6]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+7, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[7]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+8, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[8]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+0, j+9, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[9]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+1, num_basis)], -0.06666666666666667 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[11]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+2, num_basis)], -0.06666666666666667 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[12]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+3, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[13]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+4, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[14]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+5, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[15]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+6, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[16]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+7, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[17]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+8, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[18]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+9, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[19]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+2, num_basis)], -0.06666666666666667 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[22]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+3, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[23]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+4, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[24]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+5, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[25]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+6, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[26]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+7, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[27]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+8, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[28]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+9, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[29]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+3, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[33]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+4, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[34]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+5, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[35]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+6, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[36]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+7, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[37]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+8, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[38]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+9, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[39]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+4, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[44]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+5, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[45]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+6, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[46]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+7, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[47]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+8, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[48]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+9, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[49]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+5, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[55]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+6, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[56]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+7, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[57]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+8, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[58]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+9, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[59]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+6, j+6, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[66]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+6, j+7, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[67]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+6, j+8, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[68]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+6, j+9, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[69]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+7, j+7, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[77]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+7, j+8, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[78]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+7, j+9, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[79]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+8, j+8, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[88]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+8, j+9, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[89]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+9, j+9, num_basis)], -1.0 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[99]*val);
	if(i==j) return;
	atomicAdd(&g_nucattr[calc_result_index(i+1, j+0, num_basis)], -0.06666666666666667 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[10]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+0, num_basis)], -0.06666666666666667 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[20]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+2, j+1, num_basis)], -0.06666666666666667 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[21]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+0, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[30]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+1, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[31]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+3, j+2, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[32]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+0, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[40]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+1, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[41]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+2, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[42]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+4, j+3, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[43]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+0, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[50]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+1, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[51]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+2, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[52]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+3, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[53]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+5, j+4, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[54]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+6, j+0, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[60]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+6, j+1, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[61]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+6, j+2, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[62]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+6, j+3, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[63]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+6, j+4, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[64]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+6, j+5, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[65]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+7, j+0, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[70]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+7, j+1, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[71]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+7, j+2, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[72]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+7, j+3, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[73]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+7, j+4, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[74]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+7, j+5, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[75]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+7, j+6, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[76]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+8, j+0, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[80]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+8, j+1, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[81]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+8, j+2, num_basis)], -0.14907119849998599 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[82]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+8, j+3, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[83]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+8, j+4, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[84]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+8, j+5, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[85]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+8, j+6, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[86]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+8, j+7, num_basis)], -0.3333333333333333 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[87]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+9, j+0, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[90]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+9, j+1, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[91]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+9, j+2, num_basis)], -0.25819888974716115 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[92]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+9, j+3, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[93]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+9, j+4, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[94]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+9, j+5, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[95]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+9, j+6, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[96]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+9, j+7, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[97]*val);
	atomicAdd(&g_nucattr[calc_result_index(i+9, j+8, num_basis)], -0.5773502691896257 * coefandNorm * g_cgto_normalization_factors[i]*g_cgto_normalization_factors[j]* result[98]*val);
}

